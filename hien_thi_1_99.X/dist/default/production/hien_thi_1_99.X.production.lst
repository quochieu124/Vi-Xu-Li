

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 22 14:54:36 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172     065D                     __pidataBANK0:
   173                           
   174                           ;initializer for _seg7
   175     065D  343F               	retlw	63
   176     065E  3406               	retlw	6
   177     065F  345B               	retlw	91
   178     0660  344F               	retlw	79
   179     0661  3466               	retlw	102
   180     0662  346D               	retlw	109
   181     0663  347D               	retlw	125
   182     0664  3407               	retlw	7
   183     0665  347F               	retlw	127
   184     0666  346F               	retlw	111
   185     0007                     _PORTC	set	7
   186     0006                     _PORTB	set	6
   187     0087                     _TRISC	set	135
   188     0086                     _TRISB	set	134
   189                           
   190                           	psect	cinit
   191     07EE                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07EE                     __initialization:
   195                           
   196                           ; Initialize objects allocated to BANK0
   197     07EE  1383               	bcf	3,7	;select IRP bank0
   198     07EF  302A               	movlw	low (__pdataBANK0+10)
   199     07F0  00FD               	movwf	btemp+-1
   200     07F1  3006               	movlw	high __pidataBANK0
   201     07F2  00FE               	movwf	btemp
   202     07F3  305D               	movlw	low __pidataBANK0
   203     07F4  00FF               	movwf	btemp+1
   204     07F5  3020               	movlw	low __pdataBANK0
   205     07F6  0084               	movwf	4
   206     07F7  120A  118A  266B  120A  118A  	fcall	init_ram0
   207     07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210     07FC                     __end_of__initialization:
   211     07FC  0183               	clrf	3
   212     07FD  120A  118A  2F3A   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	dataBANK0
   215     0020                     __pdataBANK0:
   216     0020                     _seg7:
   217     0020                     	ds	10
   218                           
   219                           	psect	inittext
   220     0667                     init_fetch0:	
   221                           ;	Called with low address in FSR and high address in W
   222                           
   223     0667  087E               	movf	btemp,w
   224     0668  008A               	movwf	10
   225     0669  087F               	movf	btemp+1,w
   226     066A  0082               	movwf	2
   227     066B                     init_ram0:	
   228                           ;Called with:
   229                           ;	high address of idata address in btemp 
   230                           ;	low address of idata address in btemp+1 
   231                           ;	low address of data in FSR
   232                           ;	high address + 1 of data in btemp-1
   233                           
   234     066B  120A  118A  2667  120A  118A  	fcall	init_fetch0
   235     0670  0080               	movwf	0
   236     0671  0A84               	incf	4,f
   237     0672  0804               	movf	4,w
   238     0673  067D               	xorwf	btemp+-1,w
   239     0674  1903               	btfsc	3,2
   240     0675  3400               	retlw	0
   241     0676  0AFF               	incf	btemp+1,f
   242     0677  1903               	btfsc	3,2
   243     0678  0AFE               	incf	btemp,f
   244     0679  2E6B               	goto	init_ram0
   245                           
   246                           	psect	cstackCOMMON
   247     0070                     __pcstackCOMMON:
   248     0070                     ?_main:
   249     0070                     ?___awdiv:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?___awmod:	
   253                           ; 2 bytes @ 0x0
   254                           
   255     0070                     ___awdiv@divisor:	
   256                           ; 2 bytes @ 0x0
   257                           
   258     0070                     ___awmod@divisor:	
   259                           ; 2 bytes @ 0x0
   260                           
   261                           
   262                           ; 2 bytes @ 0x0
   263     0070                     	ds	2
   264     0072                     ___awdiv@dividend:
   265     0072                     ___awmod@dividend:	
   266                           ; 2 bytes @ 0x2
   267                           
   268                           
   269                           ; 2 bytes @ 0x2
   270     0072                     	ds	2
   271     0074                     ??___awdiv:
   272     0074                     ??___awmod:	
   273                           ; 1 bytes @ 0x4
   274                           
   275     0074                     ___awdiv@counter:	
   276                           ; 1 bytes @ 0x4
   277                           
   278     0074                     ___awmod@counter:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283     0074                     	ds	1
   284     0075                     ___awdiv@sign:
   285     0075                     ___awmod@sign:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 1 bytes @ 0x5
   290     0075                     	ds	1
   291     0076                     ___awdiv@quotient:
   292                           
   293                           ; 2 bytes @ 0x6
   294     0076                     	ds	2
   295     0078                     ??_main:
   296                           
   297                           ; 1 bytes @ 0x8
   298     0078                     	ds	2
   299                           
   300                           	psect	cstackBANK0
   301     002A                     __pcstackBANK0:
   302     002A                     main@hangchuc:
   303                           
   304                           ; 2 bytes @ 0x0
   305     002A                     	ds	2
   306     002C                     main@hangdonvi:
   307                           
   308                           ; 2 bytes @ 0x2
   309     002C                     	ds	2
   310     002E                     main@direction:
   311                           
   312                           ; 2 bytes @ 0x4
   313     002E                     	ds	2
   314     0030                     main@i:
   315                           
   316                           ; 2 bytes @ 0x6
   317     0030                     	ds	2
   318     0032                     main@dem:
   319                           
   320                           ; 2 bytes @ 0x8
   321     0032                     	ds	2
   322                           
   323                           	psect	maintext
   324     073A                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 16 in file "bt11.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  i               2    6[BANK0 ] int 
   335 ;;  dem             2    8[BANK0 ] int 
   336 ;;  direction       2    4[BANK0 ] int 
   337 ;;  hangdonvi       2    2[BANK0 ] int 
   338 ;;  hangchuc        2    0[BANK0 ] int 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B00/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0      10       0       0       0
   350 ;;      Temps:          2       0       0       0       0
   351 ;;      Totals:         2      10       0       0       0
   352 ;;Total ram usage:       12 bytes
   353 ;; Hardware stack levels required when called: 1
   354 ;; This function calls:
   355 ;;		___awdiv
   356 ;;		___awmod
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362     073A                     _main:	
   363                           ;psect for function _main
   364                           
   365     073A                     l823:	
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   368                           
   369                           
   370                           ;bt11.c: 17:     int dem = 1;
   371     073A  3001               	movlw	1
   372     073B  1283               	bcf	3,5	;RP0=0, select bank0
   373     073C  1303               	bcf	3,6	;RP1=0, select bank0
   374     073D  00B2               	movwf	main@dem
   375     073E  3000               	movlw	0
   376     073F  00B3               	movwf	main@dem+1
   377                           
   378                           ;bt11.c: 18:     int hangchuc;;bt11.c: 19:     int hangdonvi;;bt11.c: 20:     int direct
      +                          ion = 1;
   379     0740  3001               	movlw	1
   380     0741  00AE               	movwf	main@direction
   381     0742  3000               	movlw	0
   382     0743  00AF               	movwf	main@direction+1
   383     0744                     l825:
   384                           
   385                           ;bt11.c: 22:     TRISB = 0x00;
   386     0744  1683               	bsf	3,5	;RP0=1, select bank1
   387     0745  1303               	bcf	3,6	;RP1=0, select bank1
   388     0746  0186               	clrf	6	;volatile
   389     0747                     l827:
   390                           
   391                           ;bt11.c: 23:     TRISC = 0x00;
   392     0747  0187               	clrf	7	;volatile
   393     0748                     l829:
   394                           
   395                           ;bt11.c: 24:     PORTB = 0x00;
   396     0748  1283               	bcf	3,5	;RP0=0, select bank0
   397     0749  1303               	bcf	3,6	;RP1=0, select bank0
   398     074A  0186               	clrf	6	;volatile
   399     074B                     l831:
   400                           
   401                           ;bt11.c: 25:     PORTC = 0x00;
   402     074B  0187               	clrf	7	;volatile
   403     074C                     l833:
   404                           
   405                           ;bt11.c: 29:         hangdonvi = dem % 10;
   406     074C  300A               	movlw	10
   407     074D  00F0               	movwf	___awmod@divisor
   408     074E  3000               	movlw	0
   409     074F  00F1               	movwf	___awmod@divisor+1
   410     0750  1283               	bcf	3,5	;RP0=0, select bank0
   411     0751  1303               	bcf	3,6	;RP1=0, select bank0
   412     0752  0833               	movf	main@dem+1,w
   413     0753  00F3               	movwf	___awmod@dividend+1
   414     0754  0832               	movf	main@dem,w
   415     0755  00F2               	movwf	___awmod@dividend
   416     0756  120A  118A  267A  120A  118A  	fcall	___awmod
   417     075B  0871               	movf	?___awmod+1,w
   418     075C  1283               	bcf	3,5	;RP0=0, select bank0
   419     075D  1303               	bcf	3,6	;RP1=0, select bank0
   420     075E  00AD               	movwf	main@hangdonvi+1
   421     075F  0870               	movf	?___awmod,w
   422     0760  00AC               	movwf	main@hangdonvi
   423     0761                     l835:
   424                           
   425                           ;bt11.c: 30:         hangchuc = dem / 10;
   426     0761  300A               	movlw	10
   427     0762  00F0               	movwf	___awdiv@divisor
   428     0763  3000               	movlw	0
   429     0764  00F1               	movwf	___awdiv@divisor+1
   430     0765  0833               	movf	main@dem+1,w
   431     0766  00F3               	movwf	___awdiv@dividend+1
   432     0767  0832               	movf	main@dem,w
   433     0768  00F2               	movwf	___awdiv@dividend
   434     0769  120A  118A  26D3  120A  118A  	fcall	___awdiv
   435     076E  0871               	movf	?___awdiv+1,w
   436     076F  1283               	bcf	3,5	;RP0=0, select bank0
   437     0770  1303               	bcf	3,6	;RP1=0, select bank0
   438     0771  00AB               	movwf	main@hangchuc+1
   439     0772  0870               	movf	?___awdiv,w
   440     0773  00AA               	movwf	main@hangchuc
   441     0774                     l837:
   442                           
   443                           ;bt11.c: 32:         for (int i = 0; i < 100; i++) {
   444     0774  01B0               	clrf	main@i
   445     0775  01B1               	clrf	main@i+1
   446     0776                     l843:
   447                           
   448                           ;bt11.c: 34:             PORTC = 0x02;
   449     0776  3002               	movlw	2
   450     0777  1283               	bcf	3,5	;RP0=0, select bank0
   451     0778  1303               	bcf	3,6	;RP1=0, select bank0
   452     0779  0087               	movwf	7	;volatile
   453     077A                     l845:
   454                           
   455                           ;bt11.c: 35:             PORTB = seg7[hangchuc];
   456     077A  082A               	movf	main@hangchuc,w
   457     077B  3E20               	addlw	(low (_seg7| 0))& (0+255)
   458     077C  0084               	movwf	4
   459     077D  1383               	bcf	3,7	;select IRP bank0
   460     077E  0800               	movf	0,w
   461     077F  0086               	movwf	6	;volatile
   462     0780                     l847:
   463                           
   464                           ;bt11.c: 36:             _delay((unsigned long)((5)*(20000000/4000.0)));
   465     0780  3021               	movlw	33
   466     0781  00F9               	movwf	??_main+1
   467     0782  3076               	movlw	118
   468     0783  00F8               	movwf	??_main
   469     0784                     u457:
   470     0784  0BF8               	decfsz	??_main,f
   471     0785  2F84               	goto	u457
   472     0786  0BF9               	decfsz	??_main+1,f
   473     0787  2F84               	goto	u457
   474     0788  0000               	nop
   475     0789                     l849:
   476                           
   477                           ;bt11.c: 38:             PORTC = 0x01;
   478     0789  3001               	movlw	1
   479     078A  1283               	bcf	3,5	;RP0=0, select bank0
   480     078B  1303               	bcf	3,6	;RP1=0, select bank0
   481     078C  0087               	movwf	7	;volatile
   482     078D                     l851:
   483                           
   484                           ;bt11.c: 39:             PORTB = seg7[hangdonvi];
   485     078D  082C               	movf	main@hangdonvi,w
   486     078E  3E20               	addlw	(low (_seg7| 0))& (0+255)
   487     078F  0084               	movwf	4
   488     0790  1383               	bcf	3,7	;select IRP bank0
   489     0791  0800               	movf	0,w
   490     0792  0086               	movwf	6	;volatile
   491                           
   492                           ;bt11.c: 40:             _delay((unsigned long)((5)*(20000000/4000.0)));
   493     0793  3021               	movlw	33
   494     0794  00F9               	movwf	??_main+1
   495     0795  3076               	movlw	118
   496     0796  00F8               	movwf	??_main
   497     0797                     u467:
   498     0797  0BF8               	decfsz	??_main,f
   499     0798  2F97               	goto	u467
   500     0799  0BF9               	decfsz	??_main+1,f
   501     079A  2F97               	goto	u467
   502     079B  0000               	nop
   503                           
   504                           ;bt11.c: 41:         }
   505     079C  3001               	movlw	1
   506     079D  1283               	bcf	3,5	;RP0=0, select bank0
   507     079E  1303               	bcf	3,6	;RP1=0, select bank0
   508     079F  07B0               	addwf	main@i,f
   509     07A0  1803               	skipnc
   510     07A1  0AB1               	incf	main@i+1,f
   511     07A2  3000               	movlw	0
   512     07A3  07B1               	addwf	main@i+1,f
   513     07A4                     l853:
   514     07A4  0831               	movf	main@i+1,w
   515     07A5  3A80               	xorlw	128
   516     07A6  00FF               	movwf	btemp+1
   517     07A7  3080               	movlw	128
   518     07A8  027F               	subwf	btemp+1,w
   519     07A9  1D03               	skipz
   520     07AA  2FAD               	goto	u425
   521     07AB  3064               	movlw	100
   522     07AC  0230               	subwf	main@i,w
   523     07AD                     u425:
   524     07AD  1C03               	skipc
   525     07AE  2FB0               	goto	u421
   526     07AF  2FB1               	goto	u420
   527     07B0                     u421:
   528     07B0  2F76               	goto	l843
   529     07B1                     u420:
   530     07B1                     l855:
   531                           
   532                           ;bt11.c: 43:         dem += direction;
   533     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   534     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   535     07B3  082E               	movf	main@direction,w
   536     07B4  07B2               	addwf	main@dem,f
   537     07B5  1803               	skipnc
   538     07B6  0AB3               	incf	main@dem+1,f
   539     07B7  082F               	movf	main@direction+1,w
   540     07B8  07B3               	addwf	main@dem+1,f
   541     07B9                     l857:
   542                           
   543                           ;bt11.c: 44:         if(dem > 99) {
   544     07B9  0833               	movf	main@dem+1,w
   545     07BA  3A80               	xorlw	128
   546     07BB  00FF               	movwf	btemp+1
   547     07BC  3080               	movlw	128
   548     07BD  027F               	subwf	btemp+1,w
   549     07BE  1D03               	skipz
   550     07BF  2FC2               	goto	u435
   551     07C0  3064               	movlw	100
   552     07C1  0232               	subwf	main@dem,w
   553     07C2                     u435:
   554     07C2  1C03               	skipc
   555     07C3  2FC5               	goto	u431
   556     07C4  2FC6               	goto	u430
   557     07C5                     u431:
   558     07C5  2FD1               	goto	l861
   559     07C6                     u430:
   560     07C6                     l859:
   561                           
   562                           ;bt11.c: 45:             dem = 99;
   563     07C6  3063               	movlw	99
   564     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   565     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   566     07C9  00B2               	movwf	main@dem
   567     07CA  3000               	movlw	0
   568     07CB  00B3               	movwf	main@dem+1
   569                           
   570                           ;bt11.c: 46:             direction = -1;
   571     07CC  30FF               	movlw	255
   572     07CD  00AE               	movwf	main@direction
   573     07CE  30FF               	movlw	255
   574     07CF  00AF               	movwf	main@direction+1
   575                           
   576                           ;bt11.c: 47:         } else if(dem < 1) {
   577     07D0  2F4C               	goto	l833
   578     07D1                     l861:
   579     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   580     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   581     07D3  0833               	movf	main@dem+1,w
   582     07D4  3A80               	xorlw	128
   583     07D5  00FF               	movwf	btemp+1
   584     07D6  3080               	movlw	128
   585     07D7  027F               	subwf	btemp+1,w
   586     07D8  1D03               	skipz
   587     07D9  2FDC               	goto	u445
   588     07DA  3001               	movlw	1
   589     07DB  0232               	subwf	main@dem,w
   590     07DC                     u445:
   591     07DC  1803               	skipnc
   592     07DD  2FDF               	goto	u441
   593     07DE  2FE0               	goto	u440
   594     07DF                     u441:
   595     07DF  2F4C               	goto	l833
   596     07E0                     u440:
   597     07E0                     l863:
   598                           
   599                           ;bt11.c: 48:             dem = 1;
   600     07E0  3001               	movlw	1
   601     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   602     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   603     07E3  00B2               	movwf	main@dem
   604     07E4  3000               	movlw	0
   605     07E5  00B3               	movwf	main@dem+1
   606                           
   607                           ;bt11.c: 49:             direction = 1;
   608     07E6  3001               	movlw	1
   609     07E7  00AE               	movwf	main@direction
   610     07E8  3000               	movlw	0
   611     07E9  00AF               	movwf	main@direction+1
   612     07EA  2F4C               	goto	l833
   613     07EB  120A  118A  2800   	ljmp	start
   614     07EE                     __end_of_main:
   615                           
   616                           	psect	text1
   617     067A                     __ptext1:	
   618 ;; *************** function ___awmod *****************
   619 ;; Defined at:
   620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  divisor         2    0[COMMON] int 
   623 ;;  dividend        2    2[COMMON] int 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  sign            1    5[COMMON] unsigned char 
   626 ;;  counter         1    4[COMMON] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  2    0[COMMON] int 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, btemp+1
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         4       0       0       0       0
   637 ;;      Locals:         2       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0
   639 ;;      Totals:         6       0       0       0       0
   640 ;;Total ram usage:        6 bytes
   641 ;; Hardware stack levels used: 1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649     067A                     ___awmod:	
   650                           ;psect for function ___awmod
   651                           
   652     067A                     l785:	
   653                           ;incstack = 0
   654                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   655                           
   656     067A  01F5               	clrf	___awmod@sign
   657     067B                     l787:
   658     067B  1FF3               	btfss	___awmod@dividend+1,7
   659     067C  2E7E               	goto	u331
   660     067D  2E7F               	goto	u330
   661     067E                     u331:
   662     067E  2E86               	goto	l793
   663     067F                     u330:
   664     067F                     l789:
   665     067F  09F2               	comf	___awmod@dividend,f
   666     0680  09F3               	comf	___awmod@dividend+1,f
   667     0681  0AF2               	incf	___awmod@dividend,f
   668     0682  1903               	skipnz
   669     0683  0AF3               	incf	___awmod@dividend+1,f
   670     0684                     l791:
   671     0684  01F5               	clrf	___awmod@sign
   672     0685  0AF5               	incf	___awmod@sign,f
   673     0686                     l793:
   674     0686  1FF1               	btfss	___awmod@divisor+1,7
   675     0687  2E89               	goto	u341
   676     0688  2E8A               	goto	u340
   677     0689                     u341:
   678     0689  2E8F               	goto	l797
   679     068A                     u340:
   680     068A                     l795:
   681     068A  09F0               	comf	___awmod@divisor,f
   682     068B  09F1               	comf	___awmod@divisor+1,f
   683     068C  0AF0               	incf	___awmod@divisor,f
   684     068D  1903               	skipnz
   685     068E  0AF1               	incf	___awmod@divisor+1,f
   686     068F                     l797:
   687     068F  0870               	movf	___awmod@divisor,w
   688     0690  0471               	iorwf	___awmod@divisor+1,w
   689     0691  1903               	btfsc	3,2
   690     0692  2E94               	goto	u351
   691     0693  2E95               	goto	u350
   692     0694                     u351:
   693     0694  2EC4               	goto	l815
   694     0695                     u350:
   695     0695                     l799:
   696     0695  01F4               	clrf	___awmod@counter
   697     0696  0AF4               	incf	___awmod@counter,f
   698     0697  2EA3               	goto	l805
   699     0698                     l801:
   700     0698  3001               	movlw	1
   701     0699                     u365:
   702     0699  1003               	clrc
   703     069A  0DF0               	rlf	___awmod@divisor,f
   704     069B  0DF1               	rlf	___awmod@divisor+1,f
   705     069C  3EFF               	addlw	-1
   706     069D  1D03               	skipz
   707     069E  2E99               	goto	u365
   708     069F                     l803:
   709     069F  3001               	movlw	1
   710     06A0  00FF               	movwf	btemp+1
   711     06A1  087F               	movf	btemp+1,w
   712     06A2  07F4               	addwf	___awmod@counter,f
   713     06A3                     l805:
   714     06A3  1FF1               	btfss	___awmod@divisor+1,7
   715     06A4  2EA6               	goto	u371
   716     06A5  2EA7               	goto	u370
   717     06A6                     u371:
   718     06A6  2E98               	goto	l801
   719     06A7                     u370:
   720     06A7                     l807:
   721     06A7  0871               	movf	___awmod@divisor+1,w
   722     06A8  0273               	subwf	___awmod@dividend+1,w
   723     06A9  1D03               	skipz
   724     06AA  2EAD               	goto	u385
   725     06AB  0870               	movf	___awmod@divisor,w
   726     06AC  0272               	subwf	___awmod@dividend,w
   727     06AD                     u385:
   728     06AD  1C03               	skipc
   729     06AE  2EB0               	goto	u381
   730     06AF  2EB1               	goto	u380
   731     06B0                     u381:
   732     06B0  2EB7               	goto	l811
   733     06B1                     u380:
   734     06B1                     l809:
   735     06B1  0870               	movf	___awmod@divisor,w
   736     06B2  02F2               	subwf	___awmod@dividend,f
   737     06B3  0871               	movf	___awmod@divisor+1,w
   738     06B4  1C03               	skipc
   739     06B5  03F3               	decf	___awmod@dividend+1,f
   740     06B6  02F3               	subwf	___awmod@dividend+1,f
   741     06B7                     l811:
   742     06B7  3001               	movlw	1
   743     06B8                     u395:
   744     06B8  1003               	clrc
   745     06B9  0CF1               	rrf	___awmod@divisor+1,f
   746     06BA  0CF0               	rrf	___awmod@divisor,f
   747     06BB  3EFF               	addlw	-1
   748     06BC  1D03               	skipz
   749     06BD  2EB8               	goto	u395
   750     06BE                     l813:
   751     06BE  3001               	movlw	1
   752     06BF  02F4               	subwf	___awmod@counter,f
   753     06C0  1D03               	btfss	3,2
   754     06C1  2EC3               	goto	u401
   755     06C2  2EC4               	goto	u400
   756     06C3                     u401:
   757     06C3  2EA7               	goto	l807
   758     06C4                     u400:
   759     06C4                     l815:
   760     06C4  0875               	movf	___awmod@sign,w
   761     06C5  1903               	btfsc	3,2
   762     06C6  2EC8               	goto	u411
   763     06C7  2EC9               	goto	u410
   764     06C8                     u411:
   765     06C8  2ECE               	goto	l819
   766     06C9                     u410:
   767     06C9                     l817:
   768     06C9  09F2               	comf	___awmod@dividend,f
   769     06CA  09F3               	comf	___awmod@dividend+1,f
   770     06CB  0AF2               	incf	___awmod@dividend,f
   771     06CC  1903               	skipnz
   772     06CD  0AF3               	incf	___awmod@dividend+1,f
   773     06CE                     l819:
   774     06CE  0873               	movf	___awmod@dividend+1,w
   775     06CF  00F1               	movwf	?___awmod+1
   776     06D0  0872               	movf	___awmod@dividend,w
   777     06D1  00F0               	movwf	?___awmod
   778     06D2                     l277:
   779     06D2  0008               	return
   780     06D3                     __end_of___awmod:
   781                           
   782                           	psect	text2
   783     06D3                     __ptext2:	
   784 ;; *************** function ___awdiv *****************
   785 ;; Defined at:
   786 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  divisor         2    0[COMMON] int 
   789 ;;  dividend        2    2[COMMON] int 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  quotient        2    6[COMMON] int 
   792 ;;  sign            1    5[COMMON] unsigned char 
   793 ;;  counter         1    4[COMMON] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  2    0[COMMON] int 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, btemp+1
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         4       0       0       0       0
   804 ;;      Locals:         4       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         8       0       0       0       0
   807 ;;Total ram usage:        8 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816     06D3                     ___awdiv:	
   817                           ;psect for function ___awdiv
   818                           
   819     06D3                     l741:	
   820                           ;incstack = 0
   821                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   822                           
   823     06D3  01F5               	clrf	___awdiv@sign
   824     06D4                     l743:
   825     06D4  1FF1               	btfss	___awdiv@divisor+1,7
   826     06D5  2ED7               	goto	u231
   827     06D6  2ED8               	goto	u230
   828     06D7                     u231:
   829     06D7  2EDF               	goto	l749
   830     06D8                     u230:
   831     06D8                     l745:
   832     06D8  09F0               	comf	___awdiv@divisor,f
   833     06D9  09F1               	comf	___awdiv@divisor+1,f
   834     06DA  0AF0               	incf	___awdiv@divisor,f
   835     06DB  1903               	skipnz
   836     06DC  0AF1               	incf	___awdiv@divisor+1,f
   837     06DD                     l747:
   838     06DD  01F5               	clrf	___awdiv@sign
   839     06DE  0AF5               	incf	___awdiv@sign,f
   840     06DF                     l749:
   841     06DF  1FF3               	btfss	___awdiv@dividend+1,7
   842     06E0  2EE2               	goto	u241
   843     06E1  2EE3               	goto	u240
   844     06E2                     u241:
   845     06E2  2EEC               	goto	l755
   846     06E3                     u240:
   847     06E3                     l751:
   848     06E3  09F2               	comf	___awdiv@dividend,f
   849     06E4  09F3               	comf	___awdiv@dividend+1,f
   850     06E5  0AF2               	incf	___awdiv@dividend,f
   851     06E6  1903               	skipnz
   852     06E7  0AF3               	incf	___awdiv@dividend+1,f
   853     06E8                     l753:
   854     06E8  3001               	movlw	1
   855     06E9  00FF               	movwf	btemp+1
   856     06EA  087F               	movf	btemp+1,w
   857     06EB  06F5               	xorwf	___awdiv@sign,f
   858     06EC                     l755:
   859     06EC  01F6               	clrf	___awdiv@quotient
   860     06ED  01F7               	clrf	___awdiv@quotient+1
   861     06EE                     l757:
   862     06EE  0870               	movf	___awdiv@divisor,w
   863     06EF  0471               	iorwf	___awdiv@divisor+1,w
   864     06F0  1903               	btfsc	3,2
   865     06F1  2EF3               	goto	u251
   866     06F2  2EF4               	goto	u250
   867     06F3                     u251:
   868     06F3  2F2B               	goto	l777
   869     06F4                     u250:
   870     06F4                     l759:
   871     06F4  01F4               	clrf	___awdiv@counter
   872     06F5  0AF4               	incf	___awdiv@counter,f
   873     06F6  2F02               	goto	l765
   874     06F7                     l761:
   875     06F7  3001               	movlw	1
   876     06F8                     u265:
   877     06F8  1003               	clrc
   878     06F9  0DF0               	rlf	___awdiv@divisor,f
   879     06FA  0DF1               	rlf	___awdiv@divisor+1,f
   880     06FB  3EFF               	addlw	-1
   881     06FC  1D03               	skipz
   882     06FD  2EF8               	goto	u265
   883     06FE                     l763:
   884     06FE  3001               	movlw	1
   885     06FF  00FF               	movwf	btemp+1
   886     0700  087F               	movf	btemp+1,w
   887     0701  07F4               	addwf	___awdiv@counter,f
   888     0702                     l765:
   889     0702  1FF1               	btfss	___awdiv@divisor+1,7
   890     0703  2F05               	goto	u271
   891     0704  2F06               	goto	u270
   892     0705                     u271:
   893     0705  2EF7               	goto	l761
   894     0706                     u270:
   895     0706                     l767:
   896     0706  3001               	movlw	1
   897     0707                     u285:
   898     0707  1003               	clrc
   899     0708  0DF6               	rlf	___awdiv@quotient,f
   900     0709  0DF7               	rlf	___awdiv@quotient+1,f
   901     070A  3EFF               	addlw	-1
   902     070B  1D03               	skipz
   903     070C  2F07               	goto	u285
   904     070D  0871               	movf	___awdiv@divisor+1,w
   905     070E  0273               	subwf	___awdiv@dividend+1,w
   906     070F  1D03               	skipz
   907     0710  2F13               	goto	u295
   908     0711  0870               	movf	___awdiv@divisor,w
   909     0712  0272               	subwf	___awdiv@dividend,w
   910     0713                     u295:
   911     0713  1C03               	skipc
   912     0714  2F16               	goto	u291
   913     0715  2F17               	goto	u290
   914     0716                     u291:
   915     0716  2F1E               	goto	l773
   916     0717                     u290:
   917     0717                     l769:
   918     0717  0870               	movf	___awdiv@divisor,w
   919     0718  02F2               	subwf	___awdiv@dividend,f
   920     0719  0871               	movf	___awdiv@divisor+1,w
   921     071A  1C03               	skipc
   922     071B  03F3               	decf	___awdiv@dividend+1,f
   923     071C  02F3               	subwf	___awdiv@dividend+1,f
   924     071D                     l771:
   925     071D  1476               	bsf	___awdiv@quotient,0
   926     071E                     l773:
   927     071E  3001               	movlw	1
   928     071F                     u305:
   929     071F  1003               	clrc
   930     0720  0CF1               	rrf	___awdiv@divisor+1,f
   931     0721  0CF0               	rrf	___awdiv@divisor,f
   932     0722  3EFF               	addlw	-1
   933     0723  1D03               	skipz
   934     0724  2F1F               	goto	u305
   935     0725                     l775:
   936     0725  3001               	movlw	1
   937     0726  02F4               	subwf	___awdiv@counter,f
   938     0727  1D03               	btfss	3,2
   939     0728  2F2A               	goto	u311
   940     0729  2F2B               	goto	u310
   941     072A                     u311:
   942     072A  2F06               	goto	l767
   943     072B                     u310:
   944     072B                     l777:
   945     072B  0875               	movf	___awdiv@sign,w
   946     072C  1903               	btfsc	3,2
   947     072D  2F2F               	goto	u321
   948     072E  2F30               	goto	u320
   949     072F                     u321:
   950     072F  2F35               	goto	l781
   951     0730                     u320:
   952     0730                     l779:
   953     0730  09F6               	comf	___awdiv@quotient,f
   954     0731  09F7               	comf	___awdiv@quotient+1,f
   955     0732  0AF6               	incf	___awdiv@quotient,f
   956     0733  1903               	skipnz
   957     0734  0AF7               	incf	___awdiv@quotient+1,f
   958     0735                     l781:
   959     0735  0877               	movf	___awdiv@quotient+1,w
   960     0736  00F1               	movwf	?___awdiv+1
   961     0737  0876               	movf	___awdiv@quotient,w
   962     0738  00F0               	movwf	?___awdiv
   963     0739                     l264:
   964     0739  0008               	return
   965     073A                     __end_of___awdiv:
   966     007E                     btemp	set	126	;btemp
   967     007E                     wtemp0	set	126
   968                           
   969                           	psect	config
   970                           
   971                           ;Config register CONFIG @ 0x2007
   972                           ;	Oscillator Selection bits
   973                           ;	FOSC = HS, HS oscillator
   974                           ;	Watchdog Timer Enable bit
   975                           ;	WDTE = OFF, WDT disabled
   976                           ;	Power-up Timer Enable bit
   977                           ;	PWRTE = OFF, PWRT disabled
   978                           ;	Brown-out Reset Enable bit
   979                           ;	BOREN = ON, BOR enabled
   980                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   981                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   982                           ;	Data EEPROM Memory Code Protection bit
   983                           ;	CPD = OFF, Data EEPROM code protection off
   984                           ;	Flash Program Memory Write Enable bits
   985                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   986                           ;	In-Circuit Debugger Mode bit
   987                           ;	DEBUG = 0x1, unprogrammed default
   988                           ;	Flash Program Memory Code Protection bit
   989                           ;	CP = OFF, Code protection off
   990     2007                     	org	8199
   991     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     10      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1109
                                              8 COMMON     2     2      0
                                              0 BANK0     10    10      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 22 14:54:36 2024

                      pc 0002             ___awdiv@sign 0075                       fsr 0004  
                    l264 0739                      l277 06D2                      l801 0698  
                    l811 06B7                      l803 069F                      l741 06D3  
                    l813 06BE                      l805 06A3                      l751 06E3  
                    l743 06D4                      l807 06A7                      l815 06C4  
                    l831 074B                      l823 073A                      l761 06F7  
                    l753 06E8                      l745 06D8                      l817 06C9  
                    l809 06B1                      l833 074C                      l825 0744  
                    l771 071D                      l763 06FE                      l755 06EC  
                    l747 06DD                      l819 06CE                      l851 078D  
                    l843 0776                      l835 0761                      l827 0747  
                    l781 0735                      l773 071E                      l765 0702  
                    l757 06EE                      l749 06DF                      l861 07D1  
                    l853 07A4                      l845 077A                      l837 0774  
                    l829 0748                      l775 0725                      l767 0706  
                    l759 06F4                      l791 0684                      l863 07E0  
                    l855 07B1                      l847 0780                      l769 0717  
                    l777 072B                      l793 0686                      l785 067A  
                    l857 07B9                      l849 0789                      l779 0730  
                    l795 068A                      l787 067B                      l859 07C6  
                    l797 068F                      l789 067F                      l799 0695  
                    u310 072B                      u230 06D8                      u311 072A  
                    u231 06D7                      u320 0730                      u240 06E3  
                    u400 06C4                      u321 072F                      u305 071F  
                    u241 06E2                      u401 06C3                      u250 06F4  
                    u410 06C9                      u330 067F                      u251 06F3  
                    u411 06C8                      u331 067E                      u340 068A  
                    u420 07B1                      u341 0689                      u421 07B0  
                    u270 0706                      u350 0695                      u430 07C6  
                    u271 0705                      u351 0694                      u431 07C5  
                    u440 07E0                      u265 06F8                      u441 07DF  
                    u425 07AD                      u290 0717                      u370 06A7  
                    u291 0716                      u371 06A6                      u435 07C2  
                    u380 06B1                      u285 0707                      u381 06B0  
                    u365 0699                      u445 07DC                      u295 0713  
                    u385 06AD                      u457 0784                      u395 06B8  
                    u467 0797                      fsr0 0004                      indf 0000  
           ___awmod@sign 0075                     _main 073A                     _seg7 0020  
                   btemp 007E                     start 0000             main@hangchuc 002A  
                  ?_main 0070          __end_of___awdiv 073A          __end_of___awmod 06D3  
        ___awdiv@divisor 0070          ___awdiv@counter 0074                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  main@i 0030                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0078            main@hangdonvi 002C            main@direction 002E  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0076          ___awmod@divisor 0070          ___awmod@counter 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 065D  
             __pmaintext 073A                  ___awdiv 06D3                  ___awmod 067A  
                __ptext1 067A                  __ptext2 06D3         ___awmod@dividend 0072  
                main@dem 0032     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0667              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A                 ?___awdiv 0070                 ?___awmod 0070  
               init_ram0 066B  
