

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jul 26 00:14:47 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	idataBANK0
   169     0725                     __pidataBANK0:
   170                           
   171                           ;initializer for _led7seg
   172     0725  343F               	retlw	63
   173     0726  3406               	retlw	6
   174     0727  345B               	retlw	91
   175     0728  344F               	retlw	79
   176     0729  3466               	retlw	102
   177     072A  346D               	retlw	109
   178     072B  347D               	retlw	125
   179     072C  3407               	retlw	7
   180     072D  347F               	retlw	127
   181     072E  346F               	retlw	111
   182     0006                     _PORTBbits	set	6
   183     0008                     _PORTD	set	8
   184     0006                     _PORTB	set	6
   185     0034                     _RB4	set	52
   186     0033                     _RB3	set	51
   187     0032                     _RB2	set	50
   188     0088                     _TRISD	set	136
   189     0086                     _TRISB	set	134
   190                           
   191                           	psect	cinit
   192     07EE                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07EE                     __initialization:
   196                           
   197                           ; Initialize objects allocated to BANK0
   198     07EE  1383               	bcf	3,7	;select IRP bank0
   199     07EF  302A               	movlw	low (__pdataBANK0+10)
   200     07F0  00FD               	movwf	btemp+-1
   201     07F1  3007               	movlw	high __pidataBANK0
   202     07F2  00FE               	movwf	btemp
   203     07F3  3025               	movlw	low __pidataBANK0
   204     07F4  00FF               	movwf	btemp+1
   205     07F5  3020               	movlw	low __pdataBANK0
   206     07F6  0084               	movwf	4
   207     07F7  120A  118A  2733  120A  118A  	fcall	init_ram0
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2F42   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	dataBANK0
   216     0020                     __pdataBANK0:
   217     0020                     _led7seg:
   218     0020                     	ds	10
   219                           
   220                           	psect	inittext
   221     072F                     init_fetch0:	
   222                           ;	Called with low address in FSR and high address in W
   223                           
   224     072F  087E               	movf	btemp,w
   225     0730  008A               	movwf	10
   226     0731  087F               	movf	btemp+1,w
   227     0732  0082               	movwf	2
   228     0733                     init_ram0:	
   229                           ;Called with:
   230                           ;	high address of idata address in btemp 
   231                           ;	low address of idata address in btemp+1 
   232                           ;	low address of data in FSR
   233                           ;	high address + 1 of data in btemp-1
   234                           
   235     0733  120A  118A  272F  120A  118A  	fcall	init_fetch0
   236     0738  0080               	movwf	0
   237     0739  0A84               	incf	4,f
   238     073A  0804               	movf	4,w
   239     073B  067D               	xorwf	btemp+-1,w
   240     073C  1903               	btfsc	3,2
   241     073D  3400               	retlw	0
   242     073E  0AFF               	incf	btemp+1,f
   243     073F  1903               	btfsc	3,2
   244     0740  0AFE               	incf	btemp,f
   245     0741  2F33               	goto	init_ram0
   246                           
   247                           	psect	cstackCOMMON
   248     0070                     __pcstackCOMMON:
   249     0070                     ?_main:
   250     0070                     ??_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255     0070                     	ds	3
   256     0073                     main@dem:
   257                           
   258                           ; 2 bytes @ 0x3
   259     0073                     	ds	2
   260                           
   261                           	psect	maintext
   262     0742                     __pmaintext:	
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 16 in file "test.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  dem             2    3[COMMON] int 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         2       0       0       0       0
   284 ;;      Temps:          3       0       0       0       0
   285 ;;      Totals:         5       0       0       0       0
   286 ;;Total ram usage:        5 bytes
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294     0742                     _main:	
   295                           ;psect for function _main
   296                           
   297     0742                     l680:	
   298                           ;incstack = 0
   299                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   300                           
   301                           
   302                           ;test.c: 18:     int dem = 0;
   303     0742  01F3               	clrf	main@dem
   304     0743  01F4               	clrf	main@dem+1
   305     0744                     l682:
   306                           
   307                           ;test.c: 19:     TRISB = 0x03;
   308     0744  3003               	movlw	3
   309     0745  1683               	bsf	3,5	;RP0=1, select bank1
   310     0746  1303               	bcf	3,6	;RP1=0, select bank1
   311     0747  0086               	movwf	6	;volatile
   312     0748                     l684:
   313                           
   314                           ;test.c: 20:     PORTB = 0x00;
   315     0748  1283               	bcf	3,5	;RP0=0, select bank0
   316     0749  1303               	bcf	3,6	;RP1=0, select bank0
   317     074A  0186               	clrf	6	;volatile
   318     074B                     l686:
   319                           
   320                           ;test.c: 21:     TRISD = 0x00;
   321     074B  1683               	bsf	3,5	;RP0=1, select bank1
   322     074C  1303               	bcf	3,6	;RP1=0, select bank1
   323     074D  0188               	clrf	8	;volatile
   324     074E                     l688:
   325                           
   326                           ;test.c: 22:     PORTD = 0x00;
   327     074E  1283               	bcf	3,5	;RP0=0, select bank0
   328     074F  1303               	bcf	3,6	;RP1=0, select bank0
   329     0750  0188               	clrf	8	;volatile
   330     0751                     l690:
   331                           
   332                           ;test.c: 23:     PORTD = led7seg[dem];
   333     0751  0820               	movf	_led7seg,w
   334     0752  0088               	movwf	8	;volatile
   335     0753                     l692:
   336                           
   337                           ;test.c: 25:     {;test.c: 26:         if (PORTBbits.RB0==0)
   338     0753  1806               	btfsc	6,0	;volatile
   339     0754  2F56               	goto	u101
   340     0755  2F57               	goto	u100
   341     0756                     u101:
   342     0756  2F87               	goto	l706
   343     0757                     u100:
   344     0757                     l694:
   345                           
   346                           ;test.c: 27:         {;test.c: 28:             _delay((unsigned long)((200)*(20000000/40
      +                          00.0)));
   347     0757  3006               	movlw	6
   348     0758  00F2               	movwf	??_main+2
   349     0759  3013               	movlw	19
   350     075A  00F1               	movwf	??_main+1
   351     075B  30AD               	movlw	173
   352     075C  00F0               	movwf	??_main
   353     075D                     u197:
   354     075D  0BF0               	decfsz	??_main,f
   355     075E  2F5D               	goto	u197
   356     075F  0BF1               	decfsz	??_main+1,f
   357     0760  2F5D               	goto	u197
   358     0761  0BF2               	decfsz	??_main+2,f
   359     0762  2F5D               	goto	u197
   360     0763  2F64               	nop2
   361     0764                     l696:
   362                           
   363                           ;test.c: 29:             if (PORTBbits.RB0 == 0)
   364     0764  1283               	bcf	3,5	;RP0=0, select bank0
   365     0765  1303               	bcf	3,6	;RP1=0, select bank0
   366     0766  1806               	btfsc	6,0	;volatile
   367     0767  2F69               	goto	u111
   368     0768  2F6A               	goto	u110
   369     0769                     u111:
   370     0769  2F87               	goto	l706
   371     076A                     u110:
   372     076A                     l698:
   373                           
   374                           ;test.c: 30:             {;test.c: 31:                 dem++;
   375     076A  3001               	movlw	1
   376     076B  07F3               	addwf	main@dem,f
   377     076C  1803               	skipnc
   378     076D  0AF4               	incf	main@dem+1,f
   379     076E  3000               	movlw	0
   380     076F  07F4               	addwf	main@dem+1,f
   381     0770                     l700:
   382                           
   383                           ;test.c: 32:                 if (dem > 9)
   384     0770  0874               	movf	main@dem+1,w
   385     0771  3A80               	xorlw	128
   386     0772  00FF               	movwf	btemp+1
   387     0773  3080               	movlw	128
   388     0774  027F               	subwf	btemp+1,w
   389     0775  1D03               	skipz
   390     0776  2F79               	goto	u125
   391     0777  300A               	movlw	10
   392     0778  0273               	subwf	main@dem,w
   393     0779                     u125:
   394     0779  1C03               	skipc
   395     077A  2F7C               	goto	u121
   396     077B  2F7D               	goto	u120
   397     077C                     u121:
   398     077C  2F7F               	goto	l704
   399     077D                     u120:
   400     077D                     l702:
   401                           
   402                           ;test.c: 33:                 {;test.c: 34:                     dem = 0;
   403     077D  01F3               	clrf	main@dem
   404     077E  01F4               	clrf	main@dem+1
   405     077F                     l704:
   406                           
   407                           ;test.c: 36:                 PORTD=led7seg[dem];
   408     077F  0873               	movf	main@dem,w
   409     0780  3E20               	addlw	(low (_led7seg| 0))& (0+255)
   410     0781  0084               	movwf	4
   411     0782  1383               	bcf	3,7	;select IRP bank0
   412     0783  0800               	movf	0,w
   413     0784  1283               	bcf	3,5	;RP0=0, select bank0
   414     0785  1303               	bcf	3,6	;RP1=0, select bank0
   415     0786  0088               	movwf	8	;volatile
   416     0787                     l706:
   417                           
   418                           ;test.c: 40:         if (PORTBbits.RB1 == 1)
   419     0787  1C86               	btfss	6,1	;volatile
   420     0788  2F8A               	goto	u131
   421     0789  2F8B               	goto	u130
   422     078A                     u131:
   423     078A  2FB2               	goto	l720
   424     078B                     u130:
   425     078B                     l708:
   426                           
   427                           ;test.c: 41:         {;test.c: 42:             _delay((unsigned long)((200)*(20000000/40
      +                          00.0)));
   428     078B  3006               	movlw	6
   429     078C  00F2               	movwf	??_main+2
   430     078D  3013               	movlw	19
   431     078E  00F1               	movwf	??_main+1
   432     078F  30AD               	movlw	173
   433     0790  00F0               	movwf	??_main
   434     0791                     u207:
   435     0791  0BF0               	decfsz	??_main,f
   436     0792  2F91               	goto	u207
   437     0793  0BF1               	decfsz	??_main+1,f
   438     0794  2F91               	goto	u207
   439     0795  0BF2               	decfsz	??_main+2,f
   440     0796  2F91               	goto	u207
   441     0797  2F98               	nop2
   442     0798                     l710:
   443                           
   444                           ;test.c: 43:             if (PORTBbits.RB1 == 1)
   445     0798  1283               	bcf	3,5	;RP0=0, select bank0
   446     0799  1303               	bcf	3,6	;RP1=0, select bank0
   447     079A  1C86               	btfss	6,1	;volatile
   448     079B  2F9D               	goto	u141
   449     079C  2F9E               	goto	u140
   450     079D                     u141:
   451     079D  2FB2               	goto	l720
   452     079E                     u140:
   453     079E                     l712:
   454                           
   455                           ;test.c: 44:             {;test.c: 45:                 dem--;
   456     079E  30FF               	movlw	255
   457     079F  07F3               	addwf	main@dem,f
   458     07A0  1803               	skipnc
   459     07A1  0AF4               	incf	main@dem+1,f
   460     07A2  30FF               	movlw	255
   461     07A3  07F4               	addwf	main@dem+1,f
   462     07A4                     l714:
   463                           
   464                           ;test.c: 46:                 if (dem < 0)
   465     07A4  1FF4               	btfss	main@dem+1,7
   466     07A5  2FA7               	goto	u151
   467     07A6  2FA8               	goto	u150
   468     07A7                     u151:
   469     07A7  2FAC               	goto	l718
   470     07A8                     u150:
   471     07A8                     l716:
   472                           
   473                           ;test.c: 47:                 {;test.c: 48:                     dem = 9;
   474     07A8  3009               	movlw	9
   475     07A9  00F3               	movwf	main@dem
   476     07AA  3000               	movlw	0
   477     07AB  00F4               	movwf	main@dem+1
   478     07AC                     l718:
   479                           
   480                           ;test.c: 50:                 PORTD=led7seg[dem];
   481     07AC  0873               	movf	main@dem,w
   482     07AD  3E20               	addlw	(low (_led7seg| 0))& (0+255)
   483     07AE  0084               	movwf	4
   484     07AF  1383               	bcf	3,7	;select IRP bank0
   485     07B0  0800               	movf	0,w
   486     07B1  0088               	movwf	8	;volatile
   487     07B2                     l720:
   488                           
   489                           ;test.c: 54:         if (dem < 3)
   490     07B2  0874               	movf	main@dem+1,w
   491     07B3  3A80               	xorlw	128
   492     07B4  00FF               	movwf	btemp+1
   493     07B5  3080               	movlw	128
   494     07B6  027F               	subwf	btemp+1,w
   495     07B7  1D03               	skipz
   496     07B8  2FBB               	goto	u165
   497     07B9  3003               	movlw	3
   498     07BA  0273               	subwf	main@dem,w
   499     07BB                     u165:
   500     07BB  1803               	skipnc
   501     07BC  2FBE               	goto	u161
   502     07BD  2FBF               	goto	u160
   503     07BE                     u161:
   504     07BE  2FC5               	goto	l724
   505     07BF                     u160:
   506     07BF                     l722:
   507                           
   508                           ;test.c: 55:         {;test.c: 56:             RB2 = 0;
   509     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   510     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   511     07C1  1106               	bcf	6,2	;volatile
   512                           
   513                           ;test.c: 57:             RB3 = 1;
   514     07C2  1586               	bsf	6,3	;volatile
   515                           
   516                           ;test.c: 58:             RB4 = 1;
   517     07C3  1606               	bsf	6,4	;volatile
   518                           
   519                           ;test.c: 59:         }
   520     07C4  2F53               	goto	l692
   521     07C5                     l724:
   522     07C5  0874               	movf	main@dem+1,w
   523     07C6  3A80               	xorlw	128
   524     07C7  00FF               	movwf	btemp+1
   525     07C8  3080               	movlw	128
   526     07C9  027F               	subwf	btemp+1,w
   527     07CA  1D03               	skipz
   528     07CB  2FCE               	goto	u175
   529     07CC  3003               	movlw	3
   530     07CD  0273               	subwf	main@dem,w
   531     07CE                     u175:
   532     07CE  1C03               	skipc
   533     07CF  2FD1               	goto	u171
   534     07D0  2FD2               	goto	u170
   535     07D1                     u171:
   536     07D1  2FE5               	goto	l34
   537     07D2                     u170:
   538     07D2                     l726:
   539     07D2  0874               	movf	main@dem+1,w
   540     07D3  3A80               	xorlw	128
   541     07D4  00FF               	movwf	btemp+1
   542     07D5  3080               	movlw	128
   543     07D6  027F               	subwf	btemp+1,w
   544     07D7  1D03               	skipz
   545     07D8  2FDB               	goto	u185
   546     07D9  3007               	movlw	7
   547     07DA  0273               	subwf	main@dem,w
   548     07DB                     u185:
   549     07DB  1803               	skipnc
   550     07DC  2FDE               	goto	u181
   551     07DD  2FDF               	goto	u180
   552     07DE                     u181:
   553     07DE  2FE5               	goto	l34
   554     07DF                     u180:
   555     07DF                     l728:
   556                           
   557                           ;test.c: 61:         {;test.c: 62:             RB2 = 1;
   558     07DF  1283               	bcf	3,5	;RP0=0, select bank0
   559     07E0  1303               	bcf	3,6	;RP1=0, select bank0
   560     07E1  1506               	bsf	6,2	;volatile
   561                           
   562                           ;test.c: 63:             RB3 = 0;
   563     07E2  1186               	bcf	6,3	;volatile
   564                           
   565                           ;test.c: 64:             RB4 = 1;
   566     07E3  1606               	bsf	6,4	;volatile
   567                           
   568                           ;test.c: 65:         }
   569     07E4  2F53               	goto	l692
   570     07E5                     l34:	
   571                           ;test.c: 66:         else
   572                           
   573                           
   574                           ;test.c: 67:         {;test.c: 68:             RB2 = 1;
   575     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   576     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   577     07E7  1506               	bsf	6,2	;volatile
   578                           
   579                           ;test.c: 69:             RB3 = 1;
   580     07E8  1586               	bsf	6,3	;volatile
   581                           
   582                           ;test.c: 70:             RB4 = 0;
   583     07E9  1206               	bcf	6,4	;volatile
   584     07EA  2F53               	goto	l692
   585     07EB  120A  118A  2800   	ljmp	start
   586     07EE                     __end_of_main:
   587     007E                     btemp	set	126	;btemp
   588     007E                     wtemp0	set	126
   589                           
   590                           	psect	config
   591                           
   592                           ;Config register CONFIG @ 0x2007
   593                           ;	Oscillator Selection bits
   594                           ;	FOSC = HS, HS oscillator
   595                           ;	Watchdog Timer Enable bit
   596                           ;	WDTE = OFF, WDT disabled
   597                           ;	Power-up Timer Enable bit
   598                           ;	PWRTE = OFF, PWRT disabled
   599                           ;	Brown-out Reset Enable bit
   600                           ;	BOREN = ON, BOR enabled
   601                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   602                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   603                           ;	Data EEPROM Memory Code Protection bit
   604                           ;	CPD = OFF, Data EEPROM code protection off
   605                           ;	Flash Program Memory Write Enable bits
   606                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   607                           ;	In-Circuit Debugger Mode bit
   608                           ;	DEBUG = 0x1, unprogrammed default
   609                           ;	Flash Program Memory Code Protection bit
   610                           ;	CP = OFF, Code protection off
   611     2007                     	org	8199
   612     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     181
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jul 26 00:14:47 2024

                      pc 0002                       l34 07E5                       fsr 0004  
                    l700 0770                      l710 0798                      l702 077D  
                    l712 079E                      l720 07B2                      l704 077F  
                    l722 07BF                      l714 07A4                      l706 0787  
                    l724 07C5                      l716 07A8                      l708 078B  
                    l726 07D2                      l718 07AC                      l728 07DF  
                    l680 0742                      l690 0751                      l682 0744  
                    l692 0753                      l684 0748                      l694 0757  
                    l686 074B                      l696 0764                      l688 074E  
                    l698 076A                      _RB2 0032                      _RB3 0033  
                    _RB4 0034                      u100 0757                      u101 0756  
                    u110 076A                      u111 0769                      u120 077D  
                    u121 077C                      u130 078B                      u131 078A  
                    u140 079E                      u141 079D                      u125 0779  
                    u150 07A8                      u151 07A7                      u207 0791  
                    u160 07BF                      u161 07BE                      u170 07D2  
                    u171 07D1                      u180 07DF                      u181 07DE  
                    u165 07BB                      u175 07CE                      u185 07DB  
                    u197 075D                      fsr0 0004                      indf 0000  
                   _main 0742                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0725               __pmaintext 0742  
                _led7seg 0020                  main@dem 0073     end_of_initialization 07FC  
              _PORTBbits 0006      start_initialization 07EE               init_fetch0 072F  
            __pdataBANK0 0020                ___latbits 0002                 init_ram0 0733  
