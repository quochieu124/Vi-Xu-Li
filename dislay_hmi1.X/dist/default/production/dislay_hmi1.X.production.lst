

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jul 21 10:26:00 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172     06A0                     __pidataBANK0:
   173                           
   174                           ;initializer for _seg7
   175     06A0  343F               	retlw	63
   176     06A1  3406               	retlw	6
   177     06A2  345B               	retlw	91
   178     06A3  344F               	retlw	79
   179     06A4  3466               	retlw	102
   180     06A5  346D               	retlw	109
   181     06A6  347D               	retlw	125
   182     06A7  3407               	retlw	7
   183     06A8  347F               	retlw	127
   184     06A9  346F               	retlw	111
   185     0007                     _PORTC	set	7
   186     0006                     _PORTB	set	6
   187     0087                     _TRISC	set	135
   188     0086                     _TRISB	set	134
   189                           
   190                           	psect	cinit
   191     07EE                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07EE                     __initialization:
   195                           
   196                           ; Initialize objects allocated to BANK0
   197     07EE  1383               	bcf	3,7	;select IRP bank0
   198     07EF  302A               	movlw	low (__pdataBANK0+10)
   199     07F0  00FD               	movwf	btemp+-1
   200     07F1  3006               	movlw	high __pidataBANK0
   201     07F2  00FE               	movwf	btemp
   202     07F3  30A0               	movlw	low __pidataBANK0
   203     07F4  00FF               	movwf	btemp+1
   204     07F5  3020               	movlw	low __pdataBANK0
   205     07F6  0084               	movwf	4
   206     07F7  120A  118A  26AE  120A  118A  	fcall	init_ram0
   207     07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210     07FC                     __end_of__initialization:
   211     07FC  0183               	clrf	3
   212     07FD  120A  118A  2F7D   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	dataBANK0
   215     0020                     __pdataBANK0:
   216     0020                     _seg7:
   217     0020                     	ds	10
   218                           
   219                           	psect	inittext
   220     06AA                     init_fetch0:	
   221                           ;	Called with low address in FSR and high address in W
   222                           
   223     06AA  087E               	movf	btemp,w
   224     06AB  008A               	movwf	10
   225     06AC  087F               	movf	btemp+1,w
   226     06AD  0082               	movwf	2
   227     06AE                     init_ram0:	
   228                           ;Called with:
   229                           ;	high address of idata address in btemp 
   230                           ;	low address of idata address in btemp+1 
   231                           ;	low address of data in FSR
   232                           ;	high address + 1 of data in btemp-1
   233                           
   234     06AE  120A  118A  26AA  120A  118A  	fcall	init_fetch0
   235     06B3  0080               	movwf	0
   236     06B4  0A84               	incf	4,f
   237     06B5  0804               	movf	4,w
   238     06B6  067D               	xorwf	btemp+-1,w
   239     06B7  1903               	btfsc	3,2
   240     06B8  3400               	retlw	0
   241     06B9  0AFF               	incf	btemp+1,f
   242     06BA  1903               	btfsc	3,2
   243     06BB  0AFE               	incf	btemp,f
   244     06BC  2EAE               	goto	init_ram0
   245                           
   246                           	psect	cstackCOMMON
   247     0070                     __pcstackCOMMON:
   248     0070                     ?_main:
   249     0070                     ?___awdiv:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?___awmod:	
   253                           ; 2 bytes @ 0x0
   254                           
   255     0070                     ___awdiv@divisor:	
   256                           ; 2 bytes @ 0x0
   257                           
   258     0070                     ___awmod@divisor:	
   259                           ; 2 bytes @ 0x0
   260                           
   261                           
   262                           ; 2 bytes @ 0x0
   263     0070                     	ds	2
   264     0072                     ___awdiv@dividend:
   265     0072                     ___awmod@dividend:	
   266                           ; 2 bytes @ 0x2
   267                           
   268                           
   269                           ; 2 bytes @ 0x2
   270     0072                     	ds	2
   271     0074                     ??___awdiv:
   272     0074                     ??___awmod:	
   273                           ; 1 bytes @ 0x4
   274                           
   275     0074                     ___awdiv@counter:	
   276                           ; 1 bytes @ 0x4
   277                           
   278     0074                     ___awmod@counter:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283     0074                     	ds	1
   284     0075                     ___awdiv@sign:
   285     0075                     ___awmod@sign:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 1 bytes @ 0x5
   290     0075                     	ds	1
   291     0076                     ___awdiv@quotient:
   292                           
   293                           ; 2 bytes @ 0x6
   294     0076                     	ds	2
   295     0078                     ??_main:
   296                           
   297                           ; 1 bytes @ 0x8
   298     0078                     	ds	3
   299                           
   300                           	psect	cstackBANK0
   301     002A                     __pcstackBANK0:
   302     002A                     main@hangchuc:
   303                           
   304                           ; 2 bytes @ 0x0
   305     002A                     	ds	2
   306     002C                     main@hangdonvi:
   307                           
   308                           ; 2 bytes @ 0x2
   309     002C                     	ds	2
   310     002E                     main@dem:
   311                           
   312                           ; 2 bytes @ 0x4
   313     002E                     	ds	2
   314                           
   315                           	psect	maintext
   316     077D                     __pmaintext:	
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 16 in file "bai1aa.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  dem             2    4[BANK0 ] int 
   327 ;;  hangdonvi       2    2[BANK0 ] int 
   328 ;;  hangchuc        2    0[BANK0 ] int 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : B00/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       0       0       0       0
   339 ;;      Locals:         0       6       0       0       0
   340 ;;      Temps:          3       0       0       0       0
   341 ;;      Totals:         3       6       0       0       0
   342 ;;Total ram usage:        9 bytes
   343 ;; Hardware stack levels required when called: 1
   344 ;; This function calls:
   345 ;;		___awdiv
   346 ;;		___awmod
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352     077D                     _main:	
   353                           ;psect for function _main
   354                           
   355     077D                     l803:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   358                           
   359                           
   360                           ;bai1aa.c: 17:     int dem = 1;
   361     077D  3001               	movlw	1
   362     077E  1283               	bcf	3,5	;RP0=0, select bank0
   363     077F  1303               	bcf	3,6	;RP1=0, select bank0
   364     0780  00AE               	movwf	main@dem
   365     0781  3000               	movlw	0
   366     0782  00AF               	movwf	main@dem+1
   367     0783                     l805:
   368                           
   369                           ;bai1aa.c: 18:     int hangchuc;;bai1aa.c: 19:     int hangdonvi;;bai1aa.c: 21:     TRIS
      +                          B = 0x00;
   370     0783  1683               	bsf	3,5	;RP0=1, select bank1
   371     0784  1303               	bcf	3,6	;RP1=0, select bank1
   372     0785  0186               	clrf	6	;volatile
   373     0786                     l807:
   374                           
   375                           ;bai1aa.c: 22:     TRISC = 0x00;
   376     0786  0187               	clrf	7	;volatile
   377     0787                     l809:
   378                           
   379                           ;bai1aa.c: 23:     PORTB = 0x00;
   380     0787  1283               	bcf	3,5	;RP0=0, select bank0
   381     0788  1303               	bcf	3,6	;RP1=0, select bank0
   382     0789  0186               	clrf	6	;volatile
   383     078A                     l811:
   384                           
   385                           ;bai1aa.c: 24:     PORTC = 0x00;
   386     078A  0187               	clrf	7	;volatile
   387     078B                     l813:
   388                           
   389                           ;bai1aa.c: 27:         hangchuc = dem / 10;
   390     078B  300A               	movlw	10
   391     078C  00F0               	movwf	___awdiv@divisor
   392     078D  3000               	movlw	0
   393     078E  00F1               	movwf	___awdiv@divisor+1
   394     078F  1283               	bcf	3,5	;RP0=0, select bank0
   395     0790  1303               	bcf	3,6	;RP1=0, select bank0
   396     0791  082F               	movf	main@dem+1,w
   397     0792  00F3               	movwf	___awdiv@dividend+1
   398     0793  082E               	movf	main@dem,w
   399     0794  00F2               	movwf	___awdiv@dividend
   400     0795  120A  118A  2716  120A  118A  	fcall	___awdiv
   401     079A  0871               	movf	?___awdiv+1,w
   402     079B  1283               	bcf	3,5	;RP0=0, select bank0
   403     079C  1303               	bcf	3,6	;RP1=0, select bank0
   404     079D  00AB               	movwf	main@hangchuc+1
   405     079E  0870               	movf	?___awdiv,w
   406     079F  00AA               	movwf	main@hangchuc
   407     07A0                     l815:
   408                           
   409                           ;bai1aa.c: 28:         hangdonvi = dem % 10;
   410     07A0  300A               	movlw	10
   411     07A1  00F0               	movwf	___awmod@divisor
   412     07A2  3000               	movlw	0
   413     07A3  00F1               	movwf	___awmod@divisor+1
   414     07A4  082F               	movf	main@dem+1,w
   415     07A5  00F3               	movwf	___awmod@dividend+1
   416     07A6  082E               	movf	main@dem,w
   417     07A7  00F2               	movwf	___awmod@dividend
   418     07A8  120A  118A  26BD  120A  118A  	fcall	___awmod
   419     07AD  0871               	movf	?___awmod+1,w
   420     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   421     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   422     07B0  00AD               	movwf	main@hangdonvi+1
   423     07B1  0870               	movf	?___awmod,w
   424     07B2  00AC               	movwf	main@hangdonvi
   425                           
   426                           ;bai1aa.c: 32:         PORTC = 0x01;
   427     07B3  3001               	movlw	1
   428     07B4  0087               	movwf	7	;volatile
   429     07B5                     l817:
   430                           
   431                           ;bai1aa.c: 33:         PORTB = seg7[hangchuc];
   432     07B5  082A               	movf	main@hangchuc,w
   433     07B6  3E20               	addlw	(low (_seg7| 0))& (0+255)
   434     07B7  0084               	movwf	4
   435     07B8  1383               	bcf	3,7	;select IRP bank0
   436     07B9  0800               	movf	0,w
   437     07BA  0086               	movwf	6	;volatile
   438     07BB                     l819:
   439                           
   440                           ;bai1aa.c: 35:         PORTC = 0x02;
   441     07BB  3002               	movlw	2
   442     07BC  0087               	movwf	7	;volatile
   443                           
   444                           ;bai1aa.c: 36:         PORTB = seg7[hangdonvi];
   445     07BD  082C               	movf	main@hangdonvi,w
   446     07BE  3E20               	addlw	(low (_seg7| 0))& (0+255)
   447     07BF  0084               	movwf	4
   448     07C0  0800               	movf	0,w
   449     07C1  0086               	movwf	6	;volatile
   450     07C2                     l821:
   451                           
   452                           ;bai1aa.c: 37:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   453     07C2  301A               	movlw	26
   454     07C3  00FA               	movwf	??_main+2
   455     07C4  305E               	movlw	94
   456     07C5  00F9               	movwf	??_main+1
   457     07C6  306E               	movlw	110
   458     07C7  00F8               	movwf	??_main
   459     07C8                     u417:
   460     07C8  0BF8               	decfsz	??_main,f
   461     07C9  2FC8               	goto	u417
   462     07CA  0BF9               	decfsz	??_main+1,f
   463     07CB  2FC8               	goto	u417
   464     07CC  0BFA               	decfsz	??_main+2,f
   465     07CD  2FC8               	goto	u417
   466     07CE  0000               	nop
   467     07CF                     l823:
   468                           
   469                           ;bai1aa.c: 39:         dem++;
   470     07CF  3001               	movlw	1
   471     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   472     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   473     07D2  07AE               	addwf	main@dem,f
   474     07D3  1803               	skipnc
   475     07D4  0AAF               	incf	main@dem+1,f
   476     07D5  3000               	movlw	0
   477     07D6  07AF               	addwf	main@dem+1,f
   478     07D7                     l825:
   479                           
   480                           ;bai1aa.c: 40:         if(dem > 99) {
   481     07D7  082F               	movf	main@dem+1,w
   482     07D8  3A80               	xorlw	128
   483     07D9  00FF               	movwf	btemp+1
   484     07DA  3080               	movlw	128
   485     07DB  027F               	subwf	btemp+1,w
   486     07DC  1D03               	skipz
   487     07DD  2FE0               	goto	u405
   488     07DE  3064               	movlw	100
   489     07DF  022E               	subwf	main@dem,w
   490     07E0                     u405:
   491     07E0  1C03               	skipc
   492     07E1  2FE3               	goto	u401
   493     07E2  2FE4               	goto	u400
   494     07E3                     u401:
   495     07E3  2F8B               	goto	l813
   496     07E4                     u400:
   497     07E4                     l827:
   498                           
   499                           ;bai1aa.c: 41:             dem = 1;
   500     07E4  3001               	movlw	1
   501     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   502     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   503     07E7  00AE               	movwf	main@dem
   504     07E8  3000               	movlw	0
   505     07E9  00AF               	movwf	main@dem+1
   506     07EA  2F8B               	goto	l813
   507     07EB  120A  118A  2800   	ljmp	start
   508     07EE                     __end_of_main:
   509                           
   510                           	psect	text1
   511     06BD                     __ptext1:	
   512 ;; *************** function ___awmod *****************
   513 ;; Defined at:
   514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  divisor         2    0[COMMON] int 
   517 ;;  dividend        2    2[COMMON] int 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  sign            1    5[COMMON] unsigned char 
   520 ;;  counter         1    4[COMMON] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  2    0[COMMON] int 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, btemp+1
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         4       0       0       0       0
   531 ;;      Locals:         2       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         6       0       0       0       0
   534 ;;Total ram usage:        6 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543     06BD                     ___awmod:	
   544                           ;psect for function ___awmod
   545                           
   546     06BD                     l765:	
   547                           ;incstack = 0
   548                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   549                           
   550     06BD  01F5               	clrf	___awmod@sign
   551     06BE                     l767:
   552     06BE  1FF3               	btfss	___awmod@dividend+1,7
   553     06BF  2EC1               	goto	u311
   554     06C0  2EC2               	goto	u310
   555     06C1                     u311:
   556     06C1  2EC9               	goto	l773
   557     06C2                     u310:
   558     06C2                     l769:
   559     06C2  09F2               	comf	___awmod@dividend,f
   560     06C3  09F3               	comf	___awmod@dividend+1,f
   561     06C4  0AF2               	incf	___awmod@dividend,f
   562     06C5  1903               	skipnz
   563     06C6  0AF3               	incf	___awmod@dividend+1,f
   564     06C7                     l771:
   565     06C7  01F5               	clrf	___awmod@sign
   566     06C8  0AF5               	incf	___awmod@sign,f
   567     06C9                     l773:
   568     06C9  1FF1               	btfss	___awmod@divisor+1,7
   569     06CA  2ECC               	goto	u321
   570     06CB  2ECD               	goto	u320
   571     06CC                     u321:
   572     06CC  2ED2               	goto	l777
   573     06CD                     u320:
   574     06CD                     l775:
   575     06CD  09F0               	comf	___awmod@divisor,f
   576     06CE  09F1               	comf	___awmod@divisor+1,f
   577     06CF  0AF0               	incf	___awmod@divisor,f
   578     06D0  1903               	skipnz
   579     06D1  0AF1               	incf	___awmod@divisor+1,f
   580     06D2                     l777:
   581     06D2  0870               	movf	___awmod@divisor,w
   582     06D3  0471               	iorwf	___awmod@divisor+1,w
   583     06D4  1903               	btfsc	3,2
   584     06D5  2ED7               	goto	u331
   585     06D6  2ED8               	goto	u330
   586     06D7                     u331:
   587     06D7  2F07               	goto	l795
   588     06D8                     u330:
   589     06D8                     l779:
   590     06D8  01F4               	clrf	___awmod@counter
   591     06D9  0AF4               	incf	___awmod@counter,f
   592     06DA  2EE6               	goto	l785
   593     06DB                     l781:
   594     06DB  3001               	movlw	1
   595     06DC                     u345:
   596     06DC  1003               	clrc
   597     06DD  0DF0               	rlf	___awmod@divisor,f
   598     06DE  0DF1               	rlf	___awmod@divisor+1,f
   599     06DF  3EFF               	addlw	-1
   600     06E0  1D03               	skipz
   601     06E1  2EDC               	goto	u345
   602     06E2                     l783:
   603     06E2  3001               	movlw	1
   604     06E3  00FF               	movwf	btemp+1
   605     06E4  087F               	movf	btemp+1,w
   606     06E5  07F4               	addwf	___awmod@counter,f
   607     06E6                     l785:
   608     06E6  1FF1               	btfss	___awmod@divisor+1,7
   609     06E7  2EE9               	goto	u351
   610     06E8  2EEA               	goto	u350
   611     06E9                     u351:
   612     06E9  2EDB               	goto	l781
   613     06EA                     u350:
   614     06EA                     l787:
   615     06EA  0871               	movf	___awmod@divisor+1,w
   616     06EB  0273               	subwf	___awmod@dividend+1,w
   617     06EC  1D03               	skipz
   618     06ED  2EF0               	goto	u365
   619     06EE  0870               	movf	___awmod@divisor,w
   620     06EF  0272               	subwf	___awmod@dividend,w
   621     06F0                     u365:
   622     06F0  1C03               	skipc
   623     06F1  2EF3               	goto	u361
   624     06F2  2EF4               	goto	u360
   625     06F3                     u361:
   626     06F3  2EFA               	goto	l791
   627     06F4                     u360:
   628     06F4                     l789:
   629     06F4  0870               	movf	___awmod@divisor,w
   630     06F5  02F2               	subwf	___awmod@dividend,f
   631     06F6  0871               	movf	___awmod@divisor+1,w
   632     06F7  1C03               	skipc
   633     06F8  03F3               	decf	___awmod@dividend+1,f
   634     06F9  02F3               	subwf	___awmod@dividend+1,f
   635     06FA                     l791:
   636     06FA  3001               	movlw	1
   637     06FB                     u375:
   638     06FB  1003               	clrc
   639     06FC  0CF1               	rrf	___awmod@divisor+1,f
   640     06FD  0CF0               	rrf	___awmod@divisor,f
   641     06FE  3EFF               	addlw	-1
   642     06FF  1D03               	skipz
   643     0700  2EFB               	goto	u375
   644     0701                     l793:
   645     0701  3001               	movlw	1
   646     0702  02F4               	subwf	___awmod@counter,f
   647     0703  1D03               	btfss	3,2
   648     0704  2F06               	goto	u381
   649     0705  2F07               	goto	u380
   650     0706                     u381:
   651     0706  2EEA               	goto	l787
   652     0707                     u380:
   653     0707                     l795:
   654     0707  0875               	movf	___awmod@sign,w
   655     0708  1903               	btfsc	3,2
   656     0709  2F0B               	goto	u391
   657     070A  2F0C               	goto	u390
   658     070B                     u391:
   659     070B  2F11               	goto	l799
   660     070C                     u390:
   661     070C                     l797:
   662     070C  09F2               	comf	___awmod@dividend,f
   663     070D  09F3               	comf	___awmod@dividend+1,f
   664     070E  0AF2               	incf	___awmod@dividend,f
   665     070F  1903               	skipnz
   666     0710  0AF3               	incf	___awmod@dividend+1,f
   667     0711                     l799:
   668     0711  0873               	movf	___awmod@dividend+1,w
   669     0712  00F1               	movwf	?___awmod+1
   670     0713  0872               	movf	___awmod@dividend,w
   671     0714  00F0               	movwf	?___awmod
   672     0715                     l273:
   673     0715  0008               	return
   674     0716                     __end_of___awmod:
   675                           
   676                           	psect	text2
   677     0716                     __ptext2:	
   678 ;; *************** function ___awdiv *****************
   679 ;; Defined at:
   680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  divisor         2    0[COMMON] int 
   683 ;;  dividend        2    2[COMMON] int 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  quotient        2    6[COMMON] int 
   686 ;;  sign            1    5[COMMON] unsigned char 
   687 ;;  counter         1    4[COMMON] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  2    0[COMMON] int 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0, btemp+1
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         4       0       0       0       0
   698 ;;      Locals:         4       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         8       0       0       0       0
   701 ;;Total ram usage:        8 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     0716                     ___awdiv:	
   711                           ;psect for function ___awdiv
   712                           
   713     0716                     l721:	
   714                           ;incstack = 0
   715                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   716                           
   717     0716  01F5               	clrf	___awdiv@sign
   718     0717                     l723:
   719     0717  1FF1               	btfss	___awdiv@divisor+1,7
   720     0718  2F1A               	goto	u211
   721     0719  2F1B               	goto	u210
   722     071A                     u211:
   723     071A  2F22               	goto	l729
   724     071B                     u210:
   725     071B                     l725:
   726     071B  09F0               	comf	___awdiv@divisor,f
   727     071C  09F1               	comf	___awdiv@divisor+1,f
   728     071D  0AF0               	incf	___awdiv@divisor,f
   729     071E  1903               	skipnz
   730     071F  0AF1               	incf	___awdiv@divisor+1,f
   731     0720                     l727:
   732     0720  01F5               	clrf	___awdiv@sign
   733     0721  0AF5               	incf	___awdiv@sign,f
   734     0722                     l729:
   735     0722  1FF3               	btfss	___awdiv@dividend+1,7
   736     0723  2F25               	goto	u221
   737     0724  2F26               	goto	u220
   738     0725                     u221:
   739     0725  2F2F               	goto	l735
   740     0726                     u220:
   741     0726                     l731:
   742     0726  09F2               	comf	___awdiv@dividend,f
   743     0727  09F3               	comf	___awdiv@dividend+1,f
   744     0728  0AF2               	incf	___awdiv@dividend,f
   745     0729  1903               	skipnz
   746     072A  0AF3               	incf	___awdiv@dividend+1,f
   747     072B                     l733:
   748     072B  3001               	movlw	1
   749     072C  00FF               	movwf	btemp+1
   750     072D  087F               	movf	btemp+1,w
   751     072E  06F5               	xorwf	___awdiv@sign,f
   752     072F                     l735:
   753     072F  01F6               	clrf	___awdiv@quotient
   754     0730  01F7               	clrf	___awdiv@quotient+1
   755     0731                     l737:
   756     0731  0870               	movf	___awdiv@divisor,w
   757     0732  0471               	iorwf	___awdiv@divisor+1,w
   758     0733  1903               	btfsc	3,2
   759     0734  2F36               	goto	u231
   760     0735  2F37               	goto	u230
   761     0736                     u231:
   762     0736  2F6E               	goto	l757
   763     0737                     u230:
   764     0737                     l739:
   765     0737  01F4               	clrf	___awdiv@counter
   766     0738  0AF4               	incf	___awdiv@counter,f
   767     0739  2F45               	goto	l745
   768     073A                     l741:
   769     073A  3001               	movlw	1
   770     073B                     u245:
   771     073B  1003               	clrc
   772     073C  0DF0               	rlf	___awdiv@divisor,f
   773     073D  0DF1               	rlf	___awdiv@divisor+1,f
   774     073E  3EFF               	addlw	-1
   775     073F  1D03               	skipz
   776     0740  2F3B               	goto	u245
   777     0741                     l743:
   778     0741  3001               	movlw	1
   779     0742  00FF               	movwf	btemp+1
   780     0743  087F               	movf	btemp+1,w
   781     0744  07F4               	addwf	___awdiv@counter,f
   782     0745                     l745:
   783     0745  1FF1               	btfss	___awdiv@divisor+1,7
   784     0746  2F48               	goto	u251
   785     0747  2F49               	goto	u250
   786     0748                     u251:
   787     0748  2F3A               	goto	l741
   788     0749                     u250:
   789     0749                     l747:
   790     0749  3001               	movlw	1
   791     074A                     u265:
   792     074A  1003               	clrc
   793     074B  0DF6               	rlf	___awdiv@quotient,f
   794     074C  0DF7               	rlf	___awdiv@quotient+1,f
   795     074D  3EFF               	addlw	-1
   796     074E  1D03               	skipz
   797     074F  2F4A               	goto	u265
   798     0750  0871               	movf	___awdiv@divisor+1,w
   799     0751  0273               	subwf	___awdiv@dividend+1,w
   800     0752  1D03               	skipz
   801     0753  2F56               	goto	u275
   802     0754  0870               	movf	___awdiv@divisor,w
   803     0755  0272               	subwf	___awdiv@dividend,w
   804     0756                     u275:
   805     0756  1C03               	skipc
   806     0757  2F59               	goto	u271
   807     0758  2F5A               	goto	u270
   808     0759                     u271:
   809     0759  2F61               	goto	l753
   810     075A                     u270:
   811     075A                     l749:
   812     075A  0870               	movf	___awdiv@divisor,w
   813     075B  02F2               	subwf	___awdiv@dividend,f
   814     075C  0871               	movf	___awdiv@divisor+1,w
   815     075D  1C03               	skipc
   816     075E  03F3               	decf	___awdiv@dividend+1,f
   817     075F  02F3               	subwf	___awdiv@dividend+1,f
   818     0760                     l751:
   819     0760  1476               	bsf	___awdiv@quotient,0
   820     0761                     l753:
   821     0761  3001               	movlw	1
   822     0762                     u285:
   823     0762  1003               	clrc
   824     0763  0CF1               	rrf	___awdiv@divisor+1,f
   825     0764  0CF0               	rrf	___awdiv@divisor,f
   826     0765  3EFF               	addlw	-1
   827     0766  1D03               	skipz
   828     0767  2F62               	goto	u285
   829     0768                     l755:
   830     0768  3001               	movlw	1
   831     0769  02F4               	subwf	___awdiv@counter,f
   832     076A  1D03               	btfss	3,2
   833     076B  2F6D               	goto	u291
   834     076C  2F6E               	goto	u290
   835     076D                     u291:
   836     076D  2F49               	goto	l747
   837     076E                     u290:
   838     076E                     l757:
   839     076E  0875               	movf	___awdiv@sign,w
   840     076F  1903               	btfsc	3,2
   841     0770  2F72               	goto	u301
   842     0771  2F73               	goto	u300
   843     0772                     u301:
   844     0772  2F78               	goto	l761
   845     0773                     u300:
   846     0773                     l759:
   847     0773  09F6               	comf	___awdiv@quotient,f
   848     0774  09F7               	comf	___awdiv@quotient+1,f
   849     0775  0AF6               	incf	___awdiv@quotient,f
   850     0776  1903               	skipnz
   851     0777  0AF7               	incf	___awdiv@quotient+1,f
   852     0778                     l761:
   853     0778  0877               	movf	___awdiv@quotient+1,w
   854     0779  00F1               	movwf	?___awdiv+1
   855     077A  0876               	movf	___awdiv@quotient,w
   856     077B  00F0               	movwf	?___awdiv
   857     077C                     l260:
   858     077C  0008               	return
   859     077D                     __end_of___awdiv:
   860     007E                     btemp	set	126	;btemp
   861     007E                     wtemp0	set	126
   862                           
   863                           	psect	config
   864                           
   865                           ;Config register CONFIG @ 0x2007
   866                           ;	Oscillator Selection bits
   867                           ;	FOSC = HS, HS oscillator
   868                           ;	Watchdog Timer Enable bit
   869                           ;	WDTE = OFF, WDT disabled
   870                           ;	Power-up Timer Enable bit
   871                           ;	PWRTE = OFF, PWRT disabled
   872                           ;	Brown-out Reset Enable bit
   873                           ;	BOREN = ON, BOR enabled
   874                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   875                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   876                           ;	Data EEPROM Memory Code Protection bit
   877                           ;	CPD = OFF, Data EEPROM code protection off
   878                           ;	Flash Program Memory Write Enable bits
   879                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   880                           ;	In-Circuit Debugger Mode bit
   881                           ;	DEBUG = 0x1, unprogrammed default
   882                           ;	Flash Program Memory Code Protection bit
   883                           ;	CP = OFF, Code protection off
   884     2007                     	org	8199
   885     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      6      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1015
                                              8 COMMON     3     3      0
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jul 21 10:26:00 2024

                      pc 0002             ___awdiv@sign 0075                       fsr 0004  
                    l260 077C                      l273 0715                      l721 0716  
                    l731 0726                      l723 0717                      l811 078A  
                    l803 077D                      l741 073A                      l733 072B  
                    l725 071B                      l821 07C2                      l813 078B  
                    l805 0783                      l751 0760                      l743 0741  
                    l735 072F                      l727 0720                      l823 07CF  
                    l815 07A0                      l807 0786                      l761 0778  
                    l753 0761                      l745 0745                      l737 0731  
                    l729 0722                      l825 07D7                      l817 07B5  
                    l809 0787                      l755 0768                      l747 0749  
                    l739 0737                      l771 06C7                      l827 07E4  
                    l819 07BB                      l749 075A                      l757 076E  
                    l781 06DB                      l773 06C9                      l765 06BD  
                    l759 0773                      l791 06FA                      l783 06E2  
                    l775 06CD                      l767 06BE                      l793 0701  
                    l785 06E6                      l777 06D2                      l769 06C2  
                    l787 06EA                      l779 06D8                      l795 0707  
                    l797 070C                      l789 06F4                      l799 0711  
                    u210 071B                      u211 071A                      u300 0773  
                    u220 0726                      u301 0772                      u221 0725  
                    u230 0737                      u310 06C2                      u231 0736  
                    u311 06C1                      u320 06CD                      u400 07E4  
                    u321 06CC                      u401 07E3                      u250 0749  
                    u330 06D8                      u251 0748                      u331 06D7  
                    u245 073B                      u405 07E0                      u270 075A  
                    u350 06EA                      u271 0759                      u351 06E9  
                    u360 06F4                      u265 074A                      u361 06F3  
                    u345 06DC                      u417 07C8                      u290 076E  
                    u291 076D                      u275 0756                      u380 0707  
                    u285 0762                      u381 0706                      u365 06F0  
                    u390 070C                      u391 070B                      u375 06FB  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   _main 077D                     _seg7 0020                     btemp 007E  
                   start 0000             main@hangchuc 002A                    ?_main 0070  
        __end_of___awdiv 077D          __end_of___awmod 0716          ___awdiv@divisor 0070  
        ___awdiv@counter 0074                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0078            main@hangdonvi 002C  
       ___awdiv@dividend 0072                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0076          ___awmod@divisor 0070          ___awmod@counter 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 06A0  
             __pmaintext 077D                  ___awdiv 0716                  ___awmod 06BD  
                __ptext1 06BD                  __ptext2 0716         ___awmod@dividend 0072  
                main@dem 002E     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 06AA              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A                 ?___awdiv 0070                 ?___awmod 0070  
               init_ram0 06AE  
