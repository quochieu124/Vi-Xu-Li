

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 24 21:19:17 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     0680                     __pidataBANK0:
   174                           
   175                           ;initializer for _segments_code
   176     0680  343F               	retlw	63
   177     0681  3406               	retlw	6
   178     0682  345B               	retlw	91
   179     0683  344F               	retlw	79
   180     0684  3466               	retlw	102
   181     0685  346D               	retlw	109
   182     0686  347D               	retlw	125
   183     0687  3407               	retlw	7
   184     0688  347F               	retlw	127
   185     0689  346F               	retlw	111
   186     0006                     _PORTB	set	6
   187     0007                     _PORTC	set	7
   188     0087                     _TRISC	set	135
   189     0086                     _TRISB	set	134
   190                           
   191                           	psect	cinit
   192     07EE                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07EE                     __initialization:
   196                           
   197                           ; Initialize objects allocated to BANK0
   198     07EE  1383               	bcf	3,7	;select IRP bank0
   199     07EF  302A               	movlw	low (__pdataBANK0+10)
   200     07F0  00FD               	movwf	btemp+-1
   201     07F1  3006               	movlw	high __pidataBANK0
   202     07F2  00FE               	movwf	btemp
   203     07F3  3080               	movlw	low __pidataBANK0
   204     07F4  00FF               	movwf	btemp+1
   205     07F5  3020               	movlw	low __pdataBANK0
   206     07F6  0084               	movwf	4
   207     07F7  120A  118A  268E  120A  118A  	fcall	init_ram0
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2E9D   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	dataBANK0
   216     0020                     __pdataBANK0:
   217     0020                     _segments_code:
   218     0020                     	ds	10
   219                           
   220                           	psect	inittext
   221     068A                     init_fetch0:	
   222                           ;	Called with low address in FSR and high address in W
   223                           
   224     068A  087E               	movf	btemp,w
   225     068B  008A               	movwf	10
   226     068C  087F               	movf	btemp+1,w
   227     068D  0082               	movwf	2
   228     068E                     init_ram0:	
   229                           ;Called with:
   230                           ;	high address of idata address in btemp 
   231                           ;	low address of idata address in btemp+1 
   232                           ;	low address of data in FSR
   233                           ;	high address + 1 of data in btemp-1
   234                           
   235     068E  120A  118A  268A  120A  118A  	fcall	init_fetch0
   236     0693  0080               	movwf	0
   237     0694  0A84               	incf	4,f
   238     0695  0804               	movf	4,w
   239     0696  067D               	xorwf	btemp+-1,w
   240     0697  1903               	btfsc	3,2
   241     0698  3400               	retlw	0
   242     0699  0AFF               	incf	btemp+1,f
   243     069A  1903               	btfsc	3,2
   244     069B  0AFE               	incf	btemp,f
   245     069C  2E8E               	goto	init_ram0
   246                           
   247                           	psect	cstackCOMMON
   248     0070                     __pcstackCOMMON:
   249     0070                     ?_display_number:
   250     0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?___awdiv:	
   254                           ; 2 bytes @ 0x0
   255                           
   256     0070                     ?___awmod:	
   257                           ; 2 bytes @ 0x0
   258                           
   259     0070                     ___awdiv@divisor:	
   260                           ; 2 bytes @ 0x0
   261                           
   262     0070                     ___awmod@divisor:	
   263                           ; 2 bytes @ 0x0
   264                           
   265                           
   266                           ; 2 bytes @ 0x0
   267     0070                     	ds	2
   268     0072                     ___awdiv@dividend:
   269     0072                     ___awmod@dividend:	
   270                           ; 2 bytes @ 0x2
   271                           
   272                           
   273                           ; 2 bytes @ 0x2
   274     0072                     	ds	2
   275     0074                     ??___awdiv:
   276     0074                     ??___awmod:	
   277                           ; 1 bytes @ 0x4
   278                           
   279     0074                     ___awdiv@counter:	
   280                           ; 1 bytes @ 0x4
   281                           
   282     0074                     ___awmod@counter:	
   283                           ; 1 bytes @ 0x4
   284                           
   285                           
   286                           ; 1 bytes @ 0x4
   287     0074                     	ds	1
   288     0075                     ___awdiv@sign:
   289     0075                     ___awmod@sign:	
   290                           ; 1 bytes @ 0x5
   291                           
   292                           
   293                           ; 1 bytes @ 0x5
   294     0075                     	ds	1
   295     0076                     ___awdiv@quotient:
   296                           
   297                           ; 2 bytes @ 0x6
   298     0076                     	ds	2
   299     0078                     ??_display_number:
   300                           
   301                           ; 1 bytes @ 0x8
   302     0078                     	ds	2
   303     007A                     display_number@chuc:
   304                           
   305                           ; 1 bytes @ 0xA
   306     007A                     	ds	1
   307     007B                     display_number@donvi:
   308                           
   309                           ; 1 bytes @ 0xB
   310     007B                     	ds	1
   311     007C                     display_number@number:
   312                           
   313                           ; 1 bytes @ 0xC
   314     007C                     	ds	1
   315     007D                     ??_main:
   316                           
   317                           	psect	cstackBANK0
   318     002A                     __pcstackBANK0:	
   319                           ; 1 bytes @ 0xD
   320                           
   321     002A                     main@i_45:
   322                           
   323                           ; 1 bytes @ 0x0
   324     002A                     	ds	1
   325     002B                     main@j:
   326                           
   327                           ; 1 bytes @ 0x1
   328     002B                     	ds	1
   329     002C                     main@j_46:
   330                           
   331                           ; 1 bytes @ 0x2
   332     002C                     	ds	1
   333     002D                     main@i:
   334                           
   335                           ; 1 bytes @ 0x3
   336     002D                     	ds	1
   337                           
   338                           	psect	maintext
   339     069D                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 36 in file "dieukhien.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  j               1    2[BANK0 ] unsigned char 
   350 ;;  j               1    1[BANK0 ] unsigned char 
   351 ;;  i               1    0[BANK0 ] unsigned char 
   352 ;;  i               1    3[BANK0 ] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  2   19[None  ] int 
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       4       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       4       0       0       0
   366 ;;Total ram usage:        4 bytes
   367 ;; Hardware stack levels required when called: 2
   368 ;; This function calls:
   369 ;;		_display_number
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375     069D                     _main:	
   376                           ;psect for function _main
   377                           
   378     069D                     l855:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   381                           
   382                           
   383                           ;dieukhien.c: 37:     TRISB = 0x00;
   384     069D  1683               	bsf	3,5	;RP0=1, select bank1
   385     069E  1303               	bcf	3,6	;RP1=0, select bank1
   386     069F  0186               	clrf	6	;volatile
   387                           
   388                           ;dieukhien.c: 38:     PORTB = 0x00;
   389     06A0  1283               	bcf	3,5	;RP0=0, select bank0
   390     06A1  1303               	bcf	3,6	;RP1=0, select bank0
   391     06A2  0186               	clrf	6	;volatile
   392                           
   393                           ;dieukhien.c: 39:     TRISC = 0x00;
   394     06A3  1683               	bsf	3,5	;RP0=1, select bank1
   395     06A4  1303               	bcf	3,6	;RP1=0, select bank1
   396     06A5  0187               	clrf	7	;volatile
   397                           
   398                           ;dieukhien.c: 40:     PORTC = 0x00;
   399     06A6  1283               	bcf	3,5	;RP0=0, select bank0
   400     06A7  1303               	bcf	3,6	;RP1=0, select bank0
   401     06A8  0187               	clrf	7	;volatile
   402     06A9                     l20:	
   403                           ;dieukhien.c: 42:     while(1) {
   404                           
   405                           
   406                           ;dieukhien.c: 43:         for (unsigned char i = 0; i <= 60; i++) {
   407     06A9  01AD               	clrf	main@i
   408     06AA                     l861:
   409                           
   410                           ;dieukhien.c: 44:             for (unsigned char j = 0; j < 100; j++) {
   411     06AA  01AB               	clrf	main@j
   412     06AB                     l867:
   413                           
   414                           ;dieukhien.c: 45:                 display_number(i);
   415     06AB  082D               	movf	main@i,w
   416     06AC  120A  118A  26E2  120A  118A  	fcall	_display_number
   417     06B1                     l869:
   418                           
   419                           ;dieukhien.c: 46:             }
   420     06B1  3001               	movlw	1
   421     06B2  00FF               	movwf	btemp+1
   422     06B3  087F               	movf	btemp+1,w
   423     06B4  1283               	bcf	3,5	;RP0=0, select bank0
   424     06B5  1303               	bcf	3,6	;RP1=0, select bank0
   425     06B6  07AB               	addwf	main@j,f
   426     06B7                     l871:
   427     06B7  3064               	movlw	100
   428     06B8  022B               	subwf	main@j,w
   429     06B9  1C03               	skipc
   430     06BA  2EBC               	goto	u421
   431     06BB  2EBD               	goto	u420
   432     06BC                     u421:
   433     06BC  2EAB               	goto	l867
   434     06BD                     u420:
   435     06BD                     l873:
   436                           
   437                           ;dieukhien.c: 47:         }
   438     06BD  3001               	movlw	1
   439     06BE  00FF               	movwf	btemp+1
   440     06BF  087F               	movf	btemp+1,w
   441     06C0  07AD               	addwf	main@i,f
   442     06C1                     l875:
   443     06C1  303D               	movlw	61
   444     06C2  022D               	subwf	main@i,w
   445     06C3  1C03               	skipc
   446     06C4  2EC6               	goto	u431
   447     06C5  2EC7               	goto	u430
   448     06C6                     u431:
   449     06C6  2EAA               	goto	l861
   450     06C7                     u430:
   451     06C7                     l877:
   452                           
   453                           ;dieukhien.c: 48:         for (unsigned char i = 60; i >= 0; i--) {
   454     06C7  303C               	movlw	60
   455     06C8  00AA               	movwf	main@i_45
   456     06C9                     l881:
   457                           
   458                           ;dieukhien.c: 49:             for (unsigned char j = 0; j < 100; j++) {
   459     06C9  01AC               	clrf	main@j_46
   460     06CA                     l887:
   461                           
   462                           ;dieukhien.c: 50:                 display_number(i);
   463     06CA  082A               	movf	main@i_45,w
   464     06CB  120A  118A  26E2  120A  118A  	fcall	_display_number
   465     06D0                     l889:
   466                           
   467                           ;dieukhien.c: 51:             }
   468     06D0  3001               	movlw	1
   469     06D1  00FF               	movwf	btemp+1
   470     06D2  087F               	movf	btemp+1,w
   471     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   472     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   473     06D5  07AC               	addwf	main@j_46,f
   474     06D6                     l891:
   475     06D6  3064               	movlw	100
   476     06D7  022C               	subwf	main@j_46,w
   477     06D8  1C03               	skipc
   478     06D9  2EDB               	goto	u441
   479     06DA  2EDC               	goto	u440
   480     06DB                     u441:
   481     06DB  2ECA               	goto	l887
   482     06DC                     u440:
   483     06DC                     l893:
   484                           
   485                           ;dieukhien.c: 52:         }
   486     06DC  3001               	movlw	1
   487     06DD  02AA               	subwf	main@i_45,f
   488     06DE  2EC9               	goto	l881
   489     06DF  120A  118A  2800   	ljmp	start
   490     06E2                     __end_of_main:
   491                           
   492                           	psect	text1
   493     06E2                     __ptext1:	
   494 ;; *************** function _display_number *****************
   495 ;; Defined at:
   496 ;;		line 23 in file "dieukhien.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  number          1    wreg     unsigned char 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  number          1   12[COMMON] unsigned char 
   501 ;;  donvi           1   11[COMMON] unsigned char 
   502 ;;  chuc            1   10[COMMON] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         3       0       0       0       0
   514 ;;      Temps:          2       0       0       0       0
   515 ;;      Totals:         5       0       0       0       0
   516 ;;Total ram usage:        5 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 1
   519 ;; This function calls:
   520 ;;		___awdiv
   521 ;;		___awmod
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527     06E2                     _display_number:	
   528                           ;psect for function _display_number
   529                           
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _display_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   533                           ;display_number@number stored from wreg
   534     06E2  00FC               	movwf	display_number@number
   535     06E3                     l841:
   536                           
   537                           ;dieukhien.c: 24:     unsigned char chuc = number % 10;
   538     06E3  300A               	movlw	10
   539     06E4  00F0               	movwf	___awmod@divisor
   540     06E5  3000               	movlw	0
   541     06E6  00F1               	movwf	___awmod@divisor+1
   542     06E7  087C               	movf	display_number@number,w
   543     06E8  00F8               	movwf	??_display_number
   544     06E9  01F9               	clrf	??_display_number+1
   545     06EA  0878               	movf	??_display_number,w
   546     06EB  00F2               	movwf	___awmod@dividend
   547     06EC  0879               	movf	??_display_number+1,w
   548     06ED  00F3               	movwf	___awmod@dividend+1
   549     06EE  120A  118A  272E  120A  118A  	fcall	___awmod
   550     06F3  0870               	movf	?___awmod,w
   551     06F4  00FA               	movwf	display_number@chuc
   552                           
   553                           ;dieukhien.c: 25:     unsigned char donvi = number / 10;
   554     06F5  300A               	movlw	10
   555     06F6  00F0               	movwf	___awdiv@divisor
   556     06F7  3000               	movlw	0
   557     06F8  00F1               	movwf	___awdiv@divisor+1
   558     06F9  087C               	movf	display_number@number,w
   559     06FA  00F8               	movwf	??_display_number
   560     06FB  01F9               	clrf	??_display_number+1
   561     06FC  0878               	movf	??_display_number,w
   562     06FD  00F2               	movwf	___awdiv@dividend
   563     06FE  0879               	movf	??_display_number+1,w
   564     06FF  00F3               	movwf	___awdiv@dividend+1
   565     0700  120A  118A  2787  120A  118A  	fcall	___awdiv
   566     0705  0870               	movf	?___awdiv,w
   567     0706  00FB               	movwf	display_number@donvi
   568     0707                     l843:
   569                           
   570                           ;dieukhien.c: 28:     PORTC = 0x02;
   571     0707  3002               	movlw	2
   572     0708  1283               	bcf	3,5	;RP0=0, select bank0
   573     0709  1303               	bcf	3,6	;RP1=0, select bank0
   574     070A  0087               	movwf	7	;volatile
   575     070B                     l845:
   576                           
   577                           ;dieukhien.c: 29:     PORTB = segments_code[donvi];
   578     070B  087B               	movf	display_number@donvi,w
   579     070C  3E20               	addlw	(low (_segments_code| 0))& (0+255)
   580     070D  0084               	movwf	4
   581     070E  1383               	bcf	3,7	;select IRP bank0
   582     070F  0800               	movf	0,w
   583     0710  0086               	movwf	6	;volatile
   584     0711                     l847:
   585                           
   586                           ;dieukhien.c: 30:     _delay((unsigned long)((5)*(20000000/4000.0)));
   587     0711  3021               	movlw	33
   588     0712  00F9               	movwf	??_display_number+1
   589     0713  3076               	movlw	118
   590     0714  00F8               	movwf	??_display_number
   591     0715                     u457:
   592     0715  0BF8               	decfsz	??_display_number,f
   593     0716  2F15               	goto	u457
   594     0717  0BF9               	decfsz	??_display_number+1,f
   595     0718  2F15               	goto	u457
   596     0719  0000               	nop
   597     071A                     l849:
   598                           
   599                           ;dieukhien.c: 32:     PORTC = 0x01;
   600     071A  3001               	movlw	1
   601     071B  1283               	bcf	3,5	;RP0=0, select bank0
   602     071C  1303               	bcf	3,6	;RP1=0, select bank0
   603     071D  0087               	movwf	7	;volatile
   604     071E                     l851:
   605                           
   606                           ;dieukhien.c: 33:     PORTB = segments_code[chuc];
   607     071E  087A               	movf	display_number@chuc,w
   608     071F  3E20               	addlw	(low (_segments_code| 0))& (0+255)
   609     0720  0084               	movwf	4
   610     0721  1383               	bcf	3,7	;select IRP bank0
   611     0722  0800               	movf	0,w
   612     0723  0086               	movwf	6	;volatile
   613     0724                     l853:
   614                           
   615                           ;dieukhien.c: 34:     _delay((unsigned long)((5)*(20000000/4000.0)));
   616     0724  3021               	movlw	33
   617     0725  00F9               	movwf	??_display_number+1
   618     0726  3076               	movlw	118
   619     0727  00F8               	movwf	??_display_number
   620     0728                     u467:
   621     0728  0BF8               	decfsz	??_display_number,f
   622     0729  2F28               	goto	u467
   623     072A  0BF9               	decfsz	??_display_number+1,f
   624     072B  2F28               	goto	u467
   625     072C  0000               	nop
   626     072D                     l15:
   627     072D  0008               	return
   628     072E                     __end_of_display_number:
   629                           
   630                           	psect	text2
   631     072E                     __ptext2:	
   632 ;; *************** function ___awmod *****************
   633 ;; Defined at:
   634 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  divisor         2    0[COMMON] int 
   637 ;;  dividend        2    2[COMMON] int 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  sign            1    5[COMMON] unsigned char 
   640 ;;  counter         1    4[COMMON] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2    0[COMMON] int 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0, btemp+1
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         4       0       0       0       0
   651 ;;      Locals:         2       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0
   653 ;;      Totals:         6       0       0       0       0
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_display_number
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663     072E                     ___awmod:	
   664                           ;psect for function ___awmod
   665                           
   666     072E                     l803:	
   667                           ;incstack = 0
   668                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   669                           
   670     072E  01F5               	clrf	___awmod@sign
   671     072F                     l805:
   672     072F  1FF3               	btfss	___awmod@dividend+1,7
   673     0730  2F32               	goto	u331
   674     0731  2F33               	goto	u330
   675     0732                     u331:
   676     0732  2F3A               	goto	l811
   677     0733                     u330:
   678     0733                     l807:
   679     0733  09F2               	comf	___awmod@dividend,f
   680     0734  09F3               	comf	___awmod@dividend+1,f
   681     0735  0AF2               	incf	___awmod@dividend,f
   682     0736  1903               	skipnz
   683     0737  0AF3               	incf	___awmod@dividend+1,f
   684     0738                     l809:
   685     0738  01F5               	clrf	___awmod@sign
   686     0739  0AF5               	incf	___awmod@sign,f
   687     073A                     l811:
   688     073A  1FF1               	btfss	___awmod@divisor+1,7
   689     073B  2F3D               	goto	u341
   690     073C  2F3E               	goto	u340
   691     073D                     u341:
   692     073D  2F43               	goto	l815
   693     073E                     u340:
   694     073E                     l813:
   695     073E  09F0               	comf	___awmod@divisor,f
   696     073F  09F1               	comf	___awmod@divisor+1,f
   697     0740  0AF0               	incf	___awmod@divisor,f
   698     0741  1903               	skipnz
   699     0742  0AF1               	incf	___awmod@divisor+1,f
   700     0743                     l815:
   701     0743  0870               	movf	___awmod@divisor,w
   702     0744  0471               	iorwf	___awmod@divisor+1,w
   703     0745  1903               	btfsc	3,2
   704     0746  2F48               	goto	u351
   705     0747  2F49               	goto	u350
   706     0748                     u351:
   707     0748  2F78               	goto	l833
   708     0749                     u350:
   709     0749                     l817:
   710     0749  01F4               	clrf	___awmod@counter
   711     074A  0AF4               	incf	___awmod@counter,f
   712     074B  2F57               	goto	l823
   713     074C                     l819:
   714     074C  3001               	movlw	1
   715     074D                     u365:
   716     074D  1003               	clrc
   717     074E  0DF0               	rlf	___awmod@divisor,f
   718     074F  0DF1               	rlf	___awmod@divisor+1,f
   719     0750  3EFF               	addlw	-1
   720     0751  1D03               	skipz
   721     0752  2F4D               	goto	u365
   722     0753                     l821:
   723     0753  3001               	movlw	1
   724     0754  00FF               	movwf	btemp+1
   725     0755  087F               	movf	btemp+1,w
   726     0756  07F4               	addwf	___awmod@counter,f
   727     0757                     l823:
   728     0757  1FF1               	btfss	___awmod@divisor+1,7
   729     0758  2F5A               	goto	u371
   730     0759  2F5B               	goto	u370
   731     075A                     u371:
   732     075A  2F4C               	goto	l819
   733     075B                     u370:
   734     075B                     l825:
   735     075B  0871               	movf	___awmod@divisor+1,w
   736     075C  0273               	subwf	___awmod@dividend+1,w
   737     075D  1D03               	skipz
   738     075E  2F61               	goto	u385
   739     075F  0870               	movf	___awmod@divisor,w
   740     0760  0272               	subwf	___awmod@dividend,w
   741     0761                     u385:
   742     0761  1C03               	skipc
   743     0762  2F64               	goto	u381
   744     0763  2F65               	goto	u380
   745     0764                     u381:
   746     0764  2F6B               	goto	l829
   747     0765                     u380:
   748     0765                     l827:
   749     0765  0870               	movf	___awmod@divisor,w
   750     0766  02F2               	subwf	___awmod@dividend,f
   751     0767  0871               	movf	___awmod@divisor+1,w
   752     0768  1C03               	skipc
   753     0769  03F3               	decf	___awmod@dividend+1,f
   754     076A  02F3               	subwf	___awmod@dividend+1,f
   755     076B                     l829:
   756     076B  3001               	movlw	1
   757     076C                     u395:
   758     076C  1003               	clrc
   759     076D  0CF1               	rrf	___awmod@divisor+1,f
   760     076E  0CF0               	rrf	___awmod@divisor,f
   761     076F  3EFF               	addlw	-1
   762     0770  1D03               	skipz
   763     0771  2F6C               	goto	u395
   764     0772                     l831:
   765     0772  3001               	movlw	1
   766     0773  02F4               	subwf	___awmod@counter,f
   767     0774  1D03               	btfss	3,2
   768     0775  2F77               	goto	u401
   769     0776  2F78               	goto	u400
   770     0777                     u401:
   771     0777  2F5B               	goto	l825
   772     0778                     u400:
   773     0778                     l833:
   774     0778  0875               	movf	___awmod@sign,w
   775     0779  1903               	btfsc	3,2
   776     077A  2F7C               	goto	u411
   777     077B  2F7D               	goto	u410
   778     077C                     u411:
   779     077C  2F82               	goto	l837
   780     077D                     u410:
   781     077D                     l835:
   782     077D  09F2               	comf	___awmod@dividend,f
   783     077E  09F3               	comf	___awmod@dividend+1,f
   784     077F  0AF2               	incf	___awmod@dividend,f
   785     0780  1903               	skipnz
   786     0781  0AF3               	incf	___awmod@dividend+1,f
   787     0782                     l837:
   788     0782  0873               	movf	___awmod@dividend+1,w
   789     0783  00F1               	movwf	?___awmod+1
   790     0784  0872               	movf	___awmod@dividend,w
   791     0785  00F0               	movwf	?___awmod
   792     0786                     l283:
   793     0786  0008               	return
   794     0787                     __end_of___awmod:
   795                           
   796                           	psect	text3
   797     0787                     __ptext3:	
   798 ;; *************** function ___awdiv *****************
   799 ;; Defined at:
   800 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  divisor         2    0[COMMON] int 
   803 ;;  dividend        2    2[COMMON] int 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  quotient        2    6[COMMON] int 
   806 ;;  sign            1    5[COMMON] unsigned char 
   807 ;;  counter         1    4[COMMON] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2    0[COMMON] int 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, btemp+1
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         4       0       0       0       0
   818 ;;      Locals:         4       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0
   820 ;;      Totals:         8       0       0       0       0
   821 ;;Total ram usage:        8 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_display_number
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830     0787                     ___awdiv:	
   831                           ;psect for function ___awdiv
   832                           
   833     0787                     l759:	
   834                           ;incstack = 0
   835                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   836                           
   837     0787  01F5               	clrf	___awdiv@sign
   838     0788                     l761:
   839     0788  1FF1               	btfss	___awdiv@divisor+1,7
   840     0789  2F8B               	goto	u231
   841     078A  2F8C               	goto	u230
   842     078B                     u231:
   843     078B  2F93               	goto	l767
   844     078C                     u230:
   845     078C                     l763:
   846     078C  09F0               	comf	___awdiv@divisor,f
   847     078D  09F1               	comf	___awdiv@divisor+1,f
   848     078E  0AF0               	incf	___awdiv@divisor,f
   849     078F  1903               	skipnz
   850     0790  0AF1               	incf	___awdiv@divisor+1,f
   851     0791                     l765:
   852     0791  01F5               	clrf	___awdiv@sign
   853     0792  0AF5               	incf	___awdiv@sign,f
   854     0793                     l767:
   855     0793  1FF3               	btfss	___awdiv@dividend+1,7
   856     0794  2F96               	goto	u241
   857     0795  2F97               	goto	u240
   858     0796                     u241:
   859     0796  2FA0               	goto	l773
   860     0797                     u240:
   861     0797                     l769:
   862     0797  09F2               	comf	___awdiv@dividend,f
   863     0798  09F3               	comf	___awdiv@dividend+1,f
   864     0799  0AF2               	incf	___awdiv@dividend,f
   865     079A  1903               	skipnz
   866     079B  0AF3               	incf	___awdiv@dividend+1,f
   867     079C                     l771:
   868     079C  3001               	movlw	1
   869     079D  00FF               	movwf	btemp+1
   870     079E  087F               	movf	btemp+1,w
   871     079F  06F5               	xorwf	___awdiv@sign,f
   872     07A0                     l773:
   873     07A0  01F6               	clrf	___awdiv@quotient
   874     07A1  01F7               	clrf	___awdiv@quotient+1
   875     07A2                     l775:
   876     07A2  0870               	movf	___awdiv@divisor,w
   877     07A3  0471               	iorwf	___awdiv@divisor+1,w
   878     07A4  1903               	btfsc	3,2
   879     07A5  2FA7               	goto	u251
   880     07A6  2FA8               	goto	u250
   881     07A7                     u251:
   882     07A7  2FDF               	goto	l795
   883     07A8                     u250:
   884     07A8                     l777:
   885     07A8  01F4               	clrf	___awdiv@counter
   886     07A9  0AF4               	incf	___awdiv@counter,f
   887     07AA  2FB6               	goto	l783
   888     07AB                     l779:
   889     07AB  3001               	movlw	1
   890     07AC                     u265:
   891     07AC  1003               	clrc
   892     07AD  0DF0               	rlf	___awdiv@divisor,f
   893     07AE  0DF1               	rlf	___awdiv@divisor+1,f
   894     07AF  3EFF               	addlw	-1
   895     07B0  1D03               	skipz
   896     07B1  2FAC               	goto	u265
   897     07B2                     l781:
   898     07B2  3001               	movlw	1
   899     07B3  00FF               	movwf	btemp+1
   900     07B4  087F               	movf	btemp+1,w
   901     07B5  07F4               	addwf	___awdiv@counter,f
   902     07B6                     l783:
   903     07B6  1FF1               	btfss	___awdiv@divisor+1,7
   904     07B7  2FB9               	goto	u271
   905     07B8  2FBA               	goto	u270
   906     07B9                     u271:
   907     07B9  2FAB               	goto	l779
   908     07BA                     u270:
   909     07BA                     l785:
   910     07BA  3001               	movlw	1
   911     07BB                     u285:
   912     07BB  1003               	clrc
   913     07BC  0DF6               	rlf	___awdiv@quotient,f
   914     07BD  0DF7               	rlf	___awdiv@quotient+1,f
   915     07BE  3EFF               	addlw	-1
   916     07BF  1D03               	skipz
   917     07C0  2FBB               	goto	u285
   918     07C1  0871               	movf	___awdiv@divisor+1,w
   919     07C2  0273               	subwf	___awdiv@dividend+1,w
   920     07C3  1D03               	skipz
   921     07C4  2FC7               	goto	u295
   922     07C5  0870               	movf	___awdiv@divisor,w
   923     07C6  0272               	subwf	___awdiv@dividend,w
   924     07C7                     u295:
   925     07C7  1C03               	skipc
   926     07C8  2FCA               	goto	u291
   927     07C9  2FCB               	goto	u290
   928     07CA                     u291:
   929     07CA  2FD2               	goto	l791
   930     07CB                     u290:
   931     07CB                     l787:
   932     07CB  0870               	movf	___awdiv@divisor,w
   933     07CC  02F2               	subwf	___awdiv@dividend,f
   934     07CD  0871               	movf	___awdiv@divisor+1,w
   935     07CE  1C03               	skipc
   936     07CF  03F3               	decf	___awdiv@dividend+1,f
   937     07D0  02F3               	subwf	___awdiv@dividend+1,f
   938     07D1                     l789:
   939     07D1  1476               	bsf	___awdiv@quotient,0
   940     07D2                     l791:
   941     07D2  3001               	movlw	1
   942     07D3                     u305:
   943     07D3  1003               	clrc
   944     07D4  0CF1               	rrf	___awdiv@divisor+1,f
   945     07D5  0CF0               	rrf	___awdiv@divisor,f
   946     07D6  3EFF               	addlw	-1
   947     07D7  1D03               	skipz
   948     07D8  2FD3               	goto	u305
   949     07D9                     l793:
   950     07D9  3001               	movlw	1
   951     07DA  02F4               	subwf	___awdiv@counter,f
   952     07DB  1D03               	btfss	3,2
   953     07DC  2FDE               	goto	u311
   954     07DD  2FDF               	goto	u310
   955     07DE                     u311:
   956     07DE  2FBA               	goto	l785
   957     07DF                     u310:
   958     07DF                     l795:
   959     07DF  0875               	movf	___awdiv@sign,w
   960     07E0  1903               	btfsc	3,2
   961     07E1  2FE3               	goto	u321
   962     07E2  2FE4               	goto	u320
   963     07E3                     u321:
   964     07E3  2FE9               	goto	l799
   965     07E4                     u320:
   966     07E4                     l797:
   967     07E4  09F6               	comf	___awdiv@quotient,f
   968     07E5  09F7               	comf	___awdiv@quotient+1,f
   969     07E6  0AF6               	incf	___awdiv@quotient,f
   970     07E7  1903               	skipnz
   971     07E8  0AF7               	incf	___awdiv@quotient+1,f
   972     07E9                     l799:
   973     07E9  0877               	movf	___awdiv@quotient+1,w
   974     07EA  00F1               	movwf	?___awdiv+1
   975     07EB  0876               	movf	___awdiv@quotient,w
   976     07EC  00F0               	movwf	?___awdiv
   977     07ED                     l270:
   978     07ED  0008               	return
   979     07EE                     __end_of___awdiv:
   980     007E                     btemp	set	126	;btemp
   981     007E                     wtemp0	set	126
   982                           
   983                           	psect	config
   984                           
   985                           ;Config register CONFIG @ 0x2007
   986                           ;	Oscillator Selection bits
   987                           ;	FOSC = HS, HS oscillator
   988                           ;	Watchdog Timer Enable bit
   989                           ;	WDTE = OFF, WDT disabled
   990                           ;	Power-up Timer Enable bit
   991                           ;	PWRTE = OFF, PWRT disabled
   992                           ;	Brown-out Reset Enable bit
   993                           ;	BOREN = ON, BOR enabled
   994                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   995                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   996                           ;	Data EEPROM Memory Code Protection bit
   997                           ;	CPD = OFF, Data EEPROM code protection off
   998                           ;	Flash Program Memory Write Enable bits
   999                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1000                           ;	In-Circuit Debugger Mode bit
  1001                           ;	DEBUG = 0x1, unprogrammed default
  1002                           ;	Flash Program Memory Code Protection bit
  1003                           ;	CP = OFF, Code protection off
  1004     2007                     	org	8199
  1005     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      4      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display_number
    _display_number->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1174
                                              0 BANK0      4     4      0
                     _display_number
 ---------------------------------------------------------------------------------
 (1) _display_number                                       5     5      0     990
                                              8 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_number
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      12        0.0%
ABS                  0      0      1B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 24 21:19:17 2024

                      pc 0002                       l20 06A9                       l15 072D  
           ___awdiv@sign 0075                       fsr 0004                      l270 07ED  
                    l283 0786                      l811 073A                      l803 072E  
                    l821 0753                      l813 073E                      l805 072F  
                    l831 0772                      l823 0757                      l815 0743  
                    l807 0733                      l761 0788                      l825 075B  
                    l817 0749                      l833 0778                      l809 0738  
                    l841 06E3                      l771 079C                      l763 078C  
                    l835 077D                      l827 0765                      l819 074C  
                    l851 071E                      l843 0707                      l781 07B2  
                    l773 07A0                      l765 0791                      l837 0782  
                    l829 076B                      l853 0724                      l845 070B  
                    l861 06AA                      l791 07D2                      l783 07B6  
                    l775 07A2                      l767 0793                      l759 0787  
                    l847 0711                      l871 06B7                      l855 069D  
                    l793 07D9                      l785 07BA                      l777 07A8  
                    l769 0797                      l849 071A                      l881 06C9  
                    l873 06BD                      l787 07CB                      l779 07AB  
                    l795 07DF                      l891 06D6                      l875 06C1  
                    l867 06AB                      l797 07E4                      l789 07D1  
                    l893 06DC                      l877 06C7                      l869 06B1  
                    l799 07E9                      l887 06CA                      l889 06D0  
                    u310 07DF                      u230 078C                      u311 07DE  
                    u231 078B                      u320 07E4                      u240 0797  
                    u400 0778                      u321 07E3                      u305 07D3  
                    u241 0796                      u401 0777                      u250 07A8  
                    u410 077D                      u330 0733                      u251 07A7  
                    u411 077C                      u331 0732                      u340 073E  
                    u420 06BD                      u341 073D                      u421 06BC  
                    u270 07BA                      u350 0749                      u430 06C7  
                    u271 07B9                      u351 0748                      u431 06C6  
                    u440 06DC                      u265 07AC                      u441 06DB  
                    u290 07CB                      u370 075B                      u291 07CA  
                    u371 075A                      u380 0765                      u285 07BB  
                    u381 0764                      u365 074D                      u295 07C7  
                    u385 0761                      u457 0715                      u395 076C  
                    u467 0728                      fsr0 0004   __end_of_display_number 072E  
                    indf 0000             ___awmod@sign 0075                     _main 069D  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awdiv 07EE          __end_of___awmod 0787          ___awdiv@divisor 0070  
        ___awdiv@counter 0074                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087          ?_display_number 0070  
                  main@i 002D                    main@j 002B                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 06E2                   ??_main 007D         ___awdiv@dividend 0072  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0076  
        ___awmod@divisor 0070          ___awmod@counter 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0680      display_number@donvi 007B  
             __pmaintext 069D         ??_display_number 0078                  ___awdiv 0787  
                ___awmod 072E                  __ptext1 06E2                  __ptext2 072E  
                __ptext3 0787         ___awmod@dividend 0072     end_of_initialization 07FC  
   display_number@number 007C      start_initialization 07EE               init_fetch0 068A  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 002A  
          _segments_code 0020       display_number@chuc 007A                 ?___awdiv 0070  
               ?___awmod 0070                 main@i_45 002A                 main@j_46 002C  
               init_ram0 068E           _display_number 06E2  
