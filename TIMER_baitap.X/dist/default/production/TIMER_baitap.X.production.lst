

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Aug 03 10:17:12 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0006                     _PORTB	set	6
   169     0001                     _TMR0	set	1
   170     000B                     _INTCONbits	set	11
   171     0031                     _RB1	set	49
   172     0032                     _RB2	set	50
   173     0086                     _TRISB	set	134
   174     0081                     _OPTION_REGbits	set	129
   175                           
   176                           	psect	cinit
   177     000F                     start_initialization:	
   178                           ; #config settings
   179                           
   180     000F                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183     000F  01F5               	clrf	__pbssCOMMON& (0+127)
   184     0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   185     0011                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     0011                     __end_of__initialization:
   189     0011  0183               	clrf	3
   190     0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193     0075                     __pbssCOMMON:
   194     0075                     _count:
   195     0075                     	ds	2
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_setUpTimer0:
   200     0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_isr:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_isr:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211     0070                     	ds	2
   212     0072                     ??_setUpTimer0:
   213     0072                     ??_main:	
   214                           ; 1 bytes @ 0x2
   215                           
   216                           
   217                           ; 1 bytes @ 0x2
   218     0072                     	ds	3
   219                           
   220                           	psect	maintext
   221     0015                     __pmaintext:	
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 33 in file "Baitap.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0, pclath, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : B00/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   241 ;;      Params:         0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0
   243 ;;      Temps:          3       0       0       0       0
   244 ;;      Totals:         3       0       0       0       0
   245 ;;Total ram usage:        3 bytes
   246 ;; Hardware stack levels required when called: 2
   247 ;; This function calls:
   248 ;;		_setUpTimer0
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254     0015                     _main:	
   255                           ;psect for function _main
   256                           
   257     0015                     l632:	
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   260                           
   261                           
   262                           ;Baitap.c: 34:     TRISB = 0x00;
   263     0015  1683               	bsf	3,5	;RP0=1, select bank1
   264     0016  1303               	bcf	3,6	;RP1=0, select bank1
   265     0017  0186               	clrf	6	;volatile
   266                           
   267                           ;Baitap.c: 35:     PORTB = 0x00;
   268     0018  1283               	bcf	3,5	;RP0=0, select bank0
   269     0019  1303               	bcf	3,6	;RP1=0, select bank0
   270     001A  0186               	clrf	6	;volatile
   271     001B                     l634:
   272                           
   273                           ;Baitap.c: 36:     setUpTimer0();
   274     001B  120A  118A  2065  120A  118A  	fcall	_setUpTimer0
   275     0020                     l636:
   276                           
   277                           ;Baitap.c: 38:         RB2 = 0;
   278     0020  1283               	bcf	3,5	;RP0=0, select bank0
   279     0021  1303               	bcf	3,6	;RP1=0, select bank0
   280     0022  1106               	bcf	6,2	;volatile
   281     0023                     l638:
   282                           
   283                           ;Baitap.c: 39:         _delay((unsigned long)((3000)*(20000000/4000.0)));
   284     0023  304D               	movlw	77
   285     0024  00F4               	movwf	??_main+2
   286     0025  3019               	movlw	25
   287     0026  00F3               	movwf	??_main+1
   288     0027  304F               	movlw	79
   289     0028  00F2               	movwf	??_main
   290     0029                     u37:
   291     0029  0BF2               	decfsz	??_main,f
   292     002A  2829               	goto	u37
   293     002B  0BF3               	decfsz	??_main+1,f
   294     002C  2829               	goto	u37
   295     002D  0BF4               	decfsz	??_main+2,f
   296     002E  2829               	goto	u37
   297     002F  2830               	nop2
   298     0030                     l640:
   299                           
   300                           ;Baitap.c: 40:         RB2 = 1;
   301     0030  1283               	bcf	3,5	;RP0=0, select bank0
   302     0031  1303               	bcf	3,6	;RP1=0, select bank0
   303     0032  1506               	bsf	6,2	;volatile
   304     0033                     l642:
   305                           
   306                           ;Baitap.c: 41:         _delay((unsigned long)((3000)*(20000000/4000.0)));
   307     0033  304D               	movlw	77
   308     0034  00F4               	movwf	??_main+2
   309     0035  3019               	movlw	25
   310     0036  00F3               	movwf	??_main+1
   311     0037  304F               	movlw	79
   312     0038  00F2               	movwf	??_main
   313     0039                     u47:
   314     0039  0BF2               	decfsz	??_main,f
   315     003A  2839               	goto	u47
   316     003B  0BF3               	decfsz	??_main+1,f
   317     003C  2839               	goto	u47
   318     003D  0BF4               	decfsz	??_main+2,f
   319     003E  2839               	goto	u47
   320     003F  2840               	nop2
   321     0040  2820               	goto	l636
   322     0041  120A  118A  280C   	ljmp	start
   323     0044                     __end_of_main:
   324                           
   325                           	psect	text1
   326     0065                     __ptext1:	
   327 ;; *************** function _setUpTimer0 *****************
   328 ;; Defined at:
   329 ;;		line 20 in file "Baitap.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; Hardware stack levels required when called: 1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357     0065                     _setUpTimer0:	
   358                           ;psect for function _setUpTimer0
   359                           
   360     0065                     l628:	
   361                           ;incstack = 0
   362                           ; Regs used in _setUpTimer0: [wreg]
   363                           
   364                           
   365                           ;Baitap.c: 21:     INTCONbits.GIE = 1;
   366     0065  178B               	bsf	11,7	;volatile
   367                           
   368                           ;Baitap.c: 22:     INTCONbits.T0IE = 1;
   369     0066  168B               	bsf	11,5	;volatile
   370                           
   371                           ;Baitap.c: 24:     OPTION_REGbits.PS0 = 1;
   372     0067  1683               	bsf	3,5	;RP0=1, select bank1
   373     0068  1303               	bcf	3,6	;RP1=0, select bank1
   374     0069  1401               	bsf	1,0	;volatile
   375                           
   376                           ;Baitap.c: 25:     OPTION_REGbits.PS1 = 1;
   377     006A  1481               	bsf	1,1	;volatile
   378                           
   379                           ;Baitap.c: 26:     OPTION_REGbits.PS2 = 1;
   380     006B  1501               	bsf	1,2	;volatile
   381                           
   382                           ;Baitap.c: 27:     OPTION_REGbits.PSA = 0;
   383     006C  1181               	bcf	1,3	;volatile
   384                           
   385                           ;Baitap.c: 29:     OPTION_REGbits.T0CS = 0;
   386     006D  1281               	bcf	1,5	;volatile
   387     006E                     l630:
   388                           
   389                           ;Baitap.c: 30:     TMR0 = 60;
   390     006E  303C               	movlw	60
   391     006F  1283               	bcf	3,5	;RP0=0, select bank0
   392     0070  1303               	bcf	3,6	;RP1=0, select bank0
   393     0071  0081               	movwf	1	;volatile
   394     0072                     l21:
   395     0072  0008               	return
   396     0073                     __end_of_setUpTimer0:
   397                           
   398                           	psect	text2
   399     0044                     __ptext2:	
   400 ;; *************** function _isr *****************
   401 ;; Defined at:
   402 ;;		line 45 in file "Baitap.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0
   418 ;;      Temps:          2       0       0       0       0
   419 ;;      Totals:         2       0       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		Interrupt level 1
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429     0044                     _isr:	
   430                           ;psect for function _isr
   431                           
   432     0044                     i1l644:
   433                           
   434                           ;Baitap.c: 46:     if (INTCONbits.TMR0IF == 1) {
   435     0044  1D0B               	btfss	11,2	;volatile
   436     0045  2847               	goto	u1_21
   437     0046  2848               	goto	u1_20
   438     0047                     u1_21:
   439     0047  285E               	goto	i1l36
   440     0048                     u1_20:
   441     0048                     i1l646:
   442                           
   443                           ;Baitap.c: 47:         INTCONbits.TMR0IF = 0;
   444     0048  110B               	bcf	11,2	;volatile
   445     0049                     i1l648:
   446                           
   447                           ;Baitap.c: 48:         TMR0 = 60;
   448     0049  303C               	movlw	60
   449     004A  1283               	bcf	3,5	;RP0=0, select bank0
   450     004B  1303               	bcf	3,6	;RP1=0, select bank0
   451     004C  0081               	movwf	1	;volatile
   452                           
   453                           ;Baitap.c: 49:         count++;
   454     004D  3001               	movlw	1
   455     004E  07F5               	addwf	_count,f	;volatile
   456     004F  1803               	skipnc
   457     0050  0AF6               	incf	_count+1,f	;volatile
   458     0051  3000               	movlw	0
   459     0052  07F6               	addwf	_count+1,f	;volatile
   460     0053                     i1l650:
   461                           
   462                           ;Baitap.c: 50:         if (count == 24) {
   463     0053  3018               	movlw	24
   464     0054  0675               	xorwf	_count,w	;volatile
   465     0055  0476               	iorwf	_count+1,w	;volatile
   466     0056  1D03               	btfss	3,2
   467     0057  2859               	goto	u2_21
   468     0058  285A               	goto	u2_20
   469     0059                     u2_21:
   470     0059  285E               	goto	i1l36
   471     005A                     u2_20:
   472     005A                     i1l652:
   473                           
   474                           ;Baitap.c: 51:             RB1 ^= 1;
   475     005A  3002               	movlw	2
   476     005B  0686               	xorwf	6,f
   477     005C                     i1l654:
   478                           
   479                           ;Baitap.c: 52:             count = 0;
   480     005C  01F5               	clrf	_count	;volatile
   481     005D  01F6               	clrf	_count+1	;volatile
   482     005E                     i1l36:
   483     005E  0871               	movf	??_isr+1,w
   484     005F  008A               	movwf	10
   485     0060  0E70               	swapf	??_isr,w
   486     0061  0083               	movwf	3
   487     0062  0EFE               	swapf	btemp,f
   488     0063  0E7E               	swapf	btemp,w
   489     0064  0009               	retfie
   490     0065                     __end_of_isr:
   491     007E                     btemp	set	126	;btemp
   492     007E                     wtemp0	set	126
   493                           
   494                           	psect	intentry
   495     0004                     __pintentry:	
   496                           ;incstack = 0
   497                           ; Regs used in _isr: [wreg+status,2+status,0]
   498                           
   499     0004                     interrupt_function:
   500     007E                     saved_w	set	btemp
   501     0004  00FE               	movwf	btemp
   502     0005  0E03               	swapf	3,w
   503     0006  00F0               	movwf	??_isr
   504     0007  080A               	movf	10,w
   505     0008  00F1               	movwf	??_isr+1
   506     0009  120A  118A  2844   	ljmp	_isr
   507                           
   508                           	psect	config
   509                           
   510                           ;Config register CONFIG @ 0x2007
   511                           ;	Oscillator Selection bits
   512                           ;	FOSC = HS, HS oscillator
   513                           ;	Watchdog Timer Enable bit
   514                           ;	WDTE = OFF, WDT disabled
   515                           ;	Power-up Timer Enable bit
   516                           ;	PWRTE = OFF, PWRT disabled
   517                           ;	Brown-out Reset Enable bit
   518                           ;	BOREN = OFF, BOR disabled
   519                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   520                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   521                           ;	Data EEPROM Memory Code Protection bit
   522                           ;	CPD = OFF, Data EEPROM code protection off
   523                           ;	Flash Program Memory Write Enable bits
   524                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   525                           ;	In-Circuit Debugger Mode bit
   526                           ;	DEBUG = 0x1, unprogrammed default
   527                           ;	Flash Program Memory Code Protection bit
   528                           ;	CP = OFF, Code protection off
   529     2007                     	org	8199
   530     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
                        _setUpTimer0
 ---------------------------------------------------------------------------------
 (1) _setUpTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setUpTimer0

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Aug 03 10:17:12 2024

                     l21 0072                       u37 0029                       u47 0039  
                    l630 006E                      l640 0030                      l632 0015  
                    l642 0033                      l634 001B                      l628 0065  
                    l636 0020                      l638 0023                      _RB1 0031  
                    _RB2 0032                      _isr 0044                     ?_isr 0070  
                   i1l36 005E                     _TMR0 0001                     u1_20 0048  
                   u1_21 0047                     u2_20 005A                     u2_21 0059  
                   _main 0015                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    i1l650 0053  
                  i1l652 005A                    i1l644 0044                    i1l654 005C  
                  i1l646 0048                    i1l648 0049                    _PORTB 0006  
                  _TRISB 0086                    _count 0075                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0044                   ??_main 0072             ?_setUpTimer0 0070  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 0015               __pintentry 0004  
                __ptext1 0065                  __ptext2 0044     end_of_initialization 0011  
    start_initialization 000F              __end_of_isr 0065              __pbssCOMMON 0075  
              ___latbits 0002            ??_setUpTimer0 0072        interrupt_function 0004  
    __end_of_setUpTimer0 0073               _INTCONbits 000B              _setUpTimer0 0065  
               intlevel1 0000  
